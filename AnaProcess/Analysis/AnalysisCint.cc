//
// File generated by rootcint at Wed Nov 13 09:39:46 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME AnalysisCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "AnalysisCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ana_processor ana_processor;
      #else
      class ana_processor  :  public ::decoder_base {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::ana_processor::PROCESS_FLAG PROCESS_FLAG;
         #else
         enum PROCESS_FLAG  {
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~ana_processor() throw() {};
         vector< ::ana_base* > _analyzers; ///< A vector of analysis modules
         map< ::ana_base*, bool > _ana_status; ///< A map of analysis module status
         PROCESS_FLAG _process; ///< Processing status flag
         unsigned int _nevents; ///< Number of events being processed
         unsigned int _index; ///< Index of currently processing event
         string _ofile_name; ///< Output file name
         ::TFile* _fout; ///< Output file pointer
         ::storage_manager* _storage; ///< Storage manager pointer
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::reco_wf reco_wf;
      #else
      class reco_wf  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~reco_wf() throw() {};
         map< UInt_t, vector< unsigned short, allocator< unsigned short >  > > _wf_map; //
         set< UInt_t > _channels; ///< A set of channel numbers 
         unsigned int _frame_width; ///< The readout frame width
         unsigned int _event_id; ///< Event ID number
         unsigned int _ref_slice; ///< First time slice number in the event
         unsigned int _ref_frame; ///< First frame number in the event
         ::TH2D* _wf_histo; ///< Histogram of reco-ed waveforms
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::beamgate_debugger beamgate_debugger;
      #else
      class beamgate_debugger  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~beamgate_debugger() throw() {};
         ::TH2D* _hSampleSize; //
         ::TH2D* _hPrePedMean; //
         ::TH2D* _hPostPedMean; //
         ::TH2D* _hPrePedRMS; //
         ::TH2D* _hPostPedRMS; //
         ::TH2D* _hMaxADC; //
         ::TH2D* _hMaxTime; //
         unsigned short _adc_max; //
         unsigned short _ch_cnt; //
         unsigned int _beam_window_width; //
         unsigned short _pre_nsample; //
         unsigned short _post_nsample; //
         vector< double > _pre_sample; //
         vector< double > _post_sample; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::pmtbaseline pmtbaseline;
      #else
      class pmtbaseline  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~pmtbaseline() throw() {};
         ::TH2D* pedMean; ///< pedestal mean vs. channels
         ::TH2D* pedRMS; ///< pedestal RMS vs. channels
         ::TH2D* tailstudy; ///< pedestal mean vs. channels where mean is taken from tail samples
         ::TH1D* tailMean; ///< 1D histogram of pedestal mean taken from tail samples
         ::TH1D* tailRMS; ///< 1D histogram of pedestal rms taken from tail samples
         ::TH1D* channels; ///< 1D histogram of participating channels
         ::TH1D* pedMeanAll; ///< 1D histogram of pedetal mean (both from head & tail)
         ::TH1D* pedRMSAll; ///< 1D histogram of pedetal RMS (both from head & tail)
         ::TH1D* tailMeanCutrms; ///< 1D histogram of tail pedestal mean for RMS>0.5
         ::TH1D* tailRMSCutrms; ///< 1D histogram of tail pedestal rms for RMS>0.5
         ::TH1D* pedMeanCutrms; ///< 1D histogram of head pedestal mean for RMS>0.5
         ::TH1D* pedRMSCutrms; ///< 1D histogram of head pedestal rms for RMS>0.5
         ::TH1D* reco_time; //
         ::TH1D* reco_time_diff; //
         ::TGraphErrors* rdbadwaveforms; //
         ::TGraphErrors* bgbadwaveforms; //
         bool _use_tail; //
         bool _study_tail; //
         unsigned int _bgpoints; //Beam gate points
         unsigned int _rdpoints; //Random tail points
         double _ftailmean; //Random ped mean
         double _ftailrms; //Random ped rms
         double _fpedmean; //Beamgate ped mean
         double _fpedrms; //Beamgate ped rms
         double _nsigma; //number of sigma offset from baseline to claim a pulse
         double _min_peak; //absolute adc count threshold (baseline subtracted) to claim a pulse
         int _max; //maximum amplitude of a pulse
         vector< double > rd_waveforms; //
         vector< double > rdticks; //
         vector< double > bg_waveforms; //
         vector< double > bgticks; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::pulse_viewer pulse_viewer;
      #else
      class pulse_viewer  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~pulse_viewer() throw() {};
         unsigned int _event_id; ///< event id holder
         double _sum_charge; ///< event-wise summed charge holder
         double _sum_peak; ///< event-wise summed peak height holder
         unsigned int _npulse; ///< event-wise number of reco-ed pulse holder
         set< PMT::ch_number_t > _channels; ///< set of channel numbers for reco-ed pulses
         ::set< unsigned short, ::less< unsigned short >, allocator< unsigned short >  >::iterator _ch_iter; ///< internal iterator for _channels member
         map< PMT::ch_number_t, pair< short, short >  > _pulse_count; //
         map< PMT::ch_number_t, vector< unsigned int, allocator< unsigned int >  >  > _pulse_frame_id; ///< a set of frame id
         map< PMT::ch_number_t, vector< unsigned int, allocator< unsigned int >  >  > _pulse_sample_number; ///< a set of sample numbers
         map< PMT::ch_number_t, vector< double, allocator< double >  >  > _pulse_tstart; ///< a set of reco-ed pulse start time
         map< PMT::ch_number_t, vector< double, allocator< double >  >  > _pulse_tstart_reco; ///< a set of reco-ed pulse reco-ed start time
         map< PMT::ch_number_t, vector< double, allocator< double >  >  > _pulse_tend; ///< a set of reco-ed pulse end time
         map< PMT::ch_number_t, vector< double, allocator< double >  >  > _pulse_amp; ///< a set of reco-ed pulse amplitude
         map< PMT::ch_number_t, vector< double, allocator< double >  >  > _pulse_charge; ///< a set of reco-ed pulse charge
         map< PMT::ch_number_t, vector< double, allocator< double >  >  > _pulse_pedbase; ///< a set of reco-ed pulse pedestal baseline mean
         map< PMT::ch_number_t, vector< double, allocator< double >  >  > _pulse_pedrms; ///< a set of reco-ed pulse pedestal baseline standard deviation
         map< PMT::ch_number_t, map< unsigned int, map< unsigned int, vector< unsigned short, allocator< unsigned short >  >, ::less< unsigned int >, allocator< pair< const unsigned int, vector< unsigned short, allocator< unsigned short >  >  >  >  >, ::less< unsigned int >, allocator< pair< const unsigned int, map< unsigned int, vector< unsigned short, allocator< unsigned short >  >, ::less< unsigned int >, allocator< pair< const unsigned int, vector< unsigned short, allocator< unsigned short >  >  >  >  >  >  >  >  > _waveforms; ///< waveform containers
         ::TCanvas* _cWF; //
         ::TPad* _pTitle; ///< title pad
         ::TPad* _pData; ///< data (histogram, numbers) pad
         ::TPad* _pNote; ///< pulse parameters
         ::TPad* _pWF; ///< waveform histogram
         ::TText* _fTitle; ///< canvas title
         ::TPaveText* _fNote; ///< pulse parameters
         ::TH1D* _hWF; //
         ::TLine* _lStart; //
         ::TLine* _lEnd; //
         ::TLine* _lBase; //
         ::TLine* _lRMSTop; //
         ::TLine* _lRMSBottom; //
         ::TLine* _lTop; //
         pair< double, double > _cut_tstart; //
         pair< double, double > _cut_tstart_reco; //
         pair< double, double > _cut_tend; //
         pair< double, double > _cut_amp; //
         pair< double, double > _cut_charge; //
         pair< double, double > _cut_pedbase; //
         pair< double, double > _cut_pedrms; //
         pair< double, double > _cut_sum_charge; //
         pair< double, double > _cut_sum_peak; //
         pair< UInt_t, UInt_t > _cut_npulse; //
         pair< PMT::word_t, PMT::word_t > _cut_event_id; //
         pair< PMT::ch_number_t, PMT::ch_number_t > _cut_channels; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::pmtbaseline_ana pmtbaseline_ana;
      #else
      class pmtbaseline_ana  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~pmtbaseline_ana() throw() {};
         map< PMT::ch_number_t, ::TH1D* > _hArray_PedMean; //
         map< PMT::ch_number_t, ::TH1D* > _hArray_PedRMS; //
         map< PMT::ch_number_t, ::TH1D* > _hArray_Charge; //
         map< PMT::ch_number_t, ::TH1D* > _hArray_Peak; //
         pair< double, double > _cut_tstart; //
         pair< double, double > _cut_tstart_reco; //
         pair< double, double > _cut_tend; //
         pair< double, double > _cut_amp; //
         pair< double, double > _cut_charge; //
         pair< double, double > _cut_pedbase; //
         pair< double, double > _cut_pedrms; //
         pair< double, double > _cut_sum_charge; //
         pair< double, double > _cut_sum_peak; //
         pair< UInt_t, UInt_t > _cut_npulse; //
         pair< PMT::word_t, PMT::word_t > _cut_event_id; //
         pair< PMT::ch_number_t, PMT::ch_number_t > _cut_channels; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::pulse_analyzer pulse_analyzer;
      #else
      class pulse_analyzer  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~pulse_analyzer() throw() {};
         unsigned int _event_id; ///< event id holder
         unsigned int _ch_frame_id; //
         unsigned int _ch_sample_id; //
         unsigned int _disc_id; //
         ::DATA_STRUCT::DATA_TYPE _pulse_type; //
         ::TTree* _ch_tree; //
         int _ch; //
         int _nsample; //
         double _wf_charge; //
         double _wf_peak; //
         double _wf_ts; //
         double _wf_tm; //
         double _wf_te; //
         double _ped_mean; //
         double _ped_rms; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::pulse_selector_base pulse_selector_base;
      #else
      class pulse_selector_base  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~pulse_selector_base() throw() {};
         ::DATA_STRUCT::DATA_TYPE _pulse_type; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::pulse_selector_simple pulse_selector_simple;
      #else
      class pulse_selector_simple  :  public ::pulse_selector_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~pulse_selector_simple() throw() {};
         pair< double, double > _cut_tstart; //
         pair< double, double > _cut_tstart_reco; //
         pair< double, double > _cut_tend; //
         pair< double, double > _cut_amp; //
         pair< double, double > _cut_charge; //
         pair< double, double > _cut_pedbase; //
         pair< double, double > _cut_pedrms; //
         pair< double, double > _cut_sum_charge; //
         pair< double, double > _cut_sum_peak; //
         pair< UInt_t, UInt_t > _cut_npulse; //
         pair< PMT::word_t, PMT::word_t > _cut_frame_id; //
         pair< PMT::word_t, PMT::word_t > _cut_timeslice; //
         pair< PMT::ch_number_t, PMT::ch_number_t > _cut_channels; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::led_pulse_selector led_pulse_selector;
      #else
      class led_pulse_selector  :  public ::pulse_selector_simple {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~led_pulse_selector() throw() {};
         unsigned short _ref_ch; //
         unsigned int _frame_size; //
         unsigned int _time_cut; //
         set< PMT::word_t > _ref_time; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::led_pulse_analyzer led_pulse_analyzer;
      #else
      class led_pulse_analyzer  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~led_pulse_analyzer() throw() {};
         unsigned int _event_id; ///< event id holder
         unsigned int _ch_frame_id; //
         unsigned int _ch_sample_id; //
         unsigned int _disc_id; //
         ::TTree* _ch_tree; //
         int _ch; //
         int _nsample; //
         double _wf_charge; //
         double _wf_peak; //
         double _wf_ts; //
         double _wf_tm; //
         double _wf_te; //
         double _ped_mean; //
         double _ped_rms; //
         ::led_pulse_selector _selector; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::waveform_sampler waveform_sampler;
      #else
      class waveform_sampler  :  public ::ana_base {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~waveform_sampler() throw() {};
         map< PMT::ch_number_t, map< unsigned int, set< unsigned int, ::less< unsigned int >, allocator< unsigned int >  >, ::less< unsigned int >, allocator< pair< const unsigned int, set< unsigned int, ::less< unsigned int >, allocator< unsigned int >  >  >  >  >  > _sel_info; //
         ::pulse_selector_base* _selector; //
         map< PMT::ch_number_t, ::TH2D* > _hWF_map; //
         int _wf_length; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ana_processor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ana_processor_Dictionary();
   static void *new_ana_processor(void *p = 0);
   static void *newArray_ana_processor(Long_t size, void *p);
   static void delete_ana_processor(void *p);
   static void deleteArray_ana_processor(void *p);
   static void destruct_ana_processor(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ana_processor*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ana_processor) == sizeof(::ROOT::Shadow::ana_processor));
      ::ana_processor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ana_processor),0);
      static ::ROOT::TGenericClassInfo 
         instance("ana_processor", "./ana_processor.hh", 28,
                  typeid(::ana_processor), DefineBehavior(ptr, ptr),
                  &ana_processor_ShowMembers, &ana_processor_Dictionary, isa_proxy, 4,
                  sizeof(::ana_processor) );
      instance.SetNew(&new_ana_processor);
      instance.SetNewArray(&newArray_ana_processor);
      instance.SetDelete(&delete_ana_processor);
      instance.SetDeleteArray(&deleteArray_ana_processor);
      instance.SetDestructor(&destruct_ana_processor);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ana_processor*)
   {
      return GenerateInitInstanceLocal((::ana_processor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ana_processor*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ana_processor_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ana_processor*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void reco_wf_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void reco_wf_Dictionary();
   static void *new_reco_wf(void *p = 0);
   static void *newArray_reco_wf(Long_t size, void *p);
   static void delete_reco_wf(void *p);
   static void deleteArray_reco_wf(void *p);
   static void destruct_reco_wf(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::reco_wf*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::reco_wf) == sizeof(::ROOT::Shadow::reco_wf));
      ::reco_wf *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::reco_wf),0);
      static ::ROOT::TGenericClassInfo 
         instance("reco_wf", "./reco_wf.hh", 28,
                  typeid(::reco_wf), DefineBehavior(ptr, ptr),
                  &reco_wf_ShowMembers, &reco_wf_Dictionary, isa_proxy, 4,
                  sizeof(::reco_wf) );
      instance.SetNew(&new_reco_wf);
      instance.SetNewArray(&newArray_reco_wf);
      instance.SetDelete(&delete_reco_wf);
      instance.SetDeleteArray(&deleteArray_reco_wf);
      instance.SetDestructor(&destruct_reco_wf);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::reco_wf*)
   {
      return GenerateInitInstanceLocal((::reco_wf*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::reco_wf*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void reco_wf_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::reco_wf*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void beamgate_debugger_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void beamgate_debugger_Dictionary();
   static void *new_beamgate_debugger(void *p = 0);
   static void *newArray_beamgate_debugger(Long_t size, void *p);
   static void delete_beamgate_debugger(void *p);
   static void deleteArray_beamgate_debugger(void *p);
   static void destruct_beamgate_debugger(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::beamgate_debugger*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::beamgate_debugger) == sizeof(::ROOT::Shadow::beamgate_debugger));
      ::beamgate_debugger *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::beamgate_debugger),0);
      static ::ROOT::TGenericClassInfo 
         instance("beamgate_debugger", "./beamgate_debugger.hh", 27,
                  typeid(::beamgate_debugger), DefineBehavior(ptr, ptr),
                  &beamgate_debugger_ShowMembers, &beamgate_debugger_Dictionary, isa_proxy, 4,
                  sizeof(::beamgate_debugger) );
      instance.SetNew(&new_beamgate_debugger);
      instance.SetNewArray(&newArray_beamgate_debugger);
      instance.SetDelete(&delete_beamgate_debugger);
      instance.SetDeleteArray(&deleteArray_beamgate_debugger);
      instance.SetDestructor(&destruct_beamgate_debugger);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::beamgate_debugger*)
   {
      return GenerateInitInstanceLocal((::beamgate_debugger*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::beamgate_debugger*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void beamgate_debugger_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::beamgate_debugger*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pmtbaseline_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pmtbaseline_Dictionary();
   static void *new_pmtbaseline(void *p = 0);
   static void *newArray_pmtbaseline(Long_t size, void *p);
   static void delete_pmtbaseline(void *p);
   static void deleteArray_pmtbaseline(void *p);
   static void destruct_pmtbaseline(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::pmtbaseline*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::pmtbaseline) == sizeof(::ROOT::Shadow::pmtbaseline));
      ::pmtbaseline *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::pmtbaseline),0);
      static ::ROOT::TGenericClassInfo 
         instance("pmtbaseline", "./pmtbaseline.hh", 29,
                  typeid(::pmtbaseline), DefineBehavior(ptr, ptr),
                  &pmtbaseline_ShowMembers, &pmtbaseline_Dictionary, isa_proxy, 4,
                  sizeof(::pmtbaseline) );
      instance.SetNew(&new_pmtbaseline);
      instance.SetNewArray(&newArray_pmtbaseline);
      instance.SetDelete(&delete_pmtbaseline);
      instance.SetDeleteArray(&deleteArray_pmtbaseline);
      instance.SetDestructor(&destruct_pmtbaseline);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::pmtbaseline*)
   {
      return GenerateInitInstanceLocal((::pmtbaseline*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pmtbaseline*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pmtbaseline_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::pmtbaseline*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pulse_viewer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pulse_viewer_Dictionary();
   static void *new_pulse_viewer(void *p = 0);
   static void *newArray_pulse_viewer(Long_t size, void *p);
   static void delete_pulse_viewer(void *p);
   static void deleteArray_pulse_viewer(void *p);
   static void destruct_pulse_viewer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::pulse_viewer*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::pulse_viewer) == sizeof(::ROOT::Shadow::pulse_viewer));
      ::pulse_viewer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::pulse_viewer),0);
      static ::ROOT::TGenericClassInfo 
         instance("pulse_viewer", "./pulse_viewer.hh", 42,
                  typeid(::pulse_viewer), DefineBehavior(ptr, ptr),
                  &pulse_viewer_ShowMembers, &pulse_viewer_Dictionary, isa_proxy, 4,
                  sizeof(::pulse_viewer) );
      instance.SetNew(&new_pulse_viewer);
      instance.SetNewArray(&newArray_pulse_viewer);
      instance.SetDelete(&delete_pulse_viewer);
      instance.SetDeleteArray(&deleteArray_pulse_viewer);
      instance.SetDestructor(&destruct_pulse_viewer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::pulse_viewer*)
   {
      return GenerateInitInstanceLocal((::pulse_viewer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pulse_viewer*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pulse_viewer_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::pulse_viewer*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pmtbaseline_ana_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pmtbaseline_ana_Dictionary();
   static void *new_pmtbaseline_ana(void *p = 0);
   static void *newArray_pmtbaseline_ana(Long_t size, void *p);
   static void delete_pmtbaseline_ana(void *p);
   static void deleteArray_pmtbaseline_ana(void *p);
   static void destruct_pmtbaseline_ana(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::pmtbaseline_ana*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::pmtbaseline_ana) == sizeof(::ROOT::Shadow::pmtbaseline_ana));
      ::pmtbaseline_ana *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::pmtbaseline_ana),0);
      static ::ROOT::TGenericClassInfo 
         instance("pmtbaseline_ana", "./pmtbaseline_ana.hh", 26,
                  typeid(::pmtbaseline_ana), DefineBehavior(ptr, ptr),
                  &pmtbaseline_ana_ShowMembers, &pmtbaseline_ana_Dictionary, isa_proxy, 4,
                  sizeof(::pmtbaseline_ana) );
      instance.SetNew(&new_pmtbaseline_ana);
      instance.SetNewArray(&newArray_pmtbaseline_ana);
      instance.SetDelete(&delete_pmtbaseline_ana);
      instance.SetDeleteArray(&deleteArray_pmtbaseline_ana);
      instance.SetDestructor(&destruct_pmtbaseline_ana);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::pmtbaseline_ana*)
   {
      return GenerateInitInstanceLocal((::pmtbaseline_ana*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pmtbaseline_ana*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pmtbaseline_ana_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::pmtbaseline_ana*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pulse_analyzer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pulse_analyzer_Dictionary();
   static void *new_pulse_analyzer(void *p = 0);
   static void *newArray_pulse_analyzer(Long_t size, void *p);
   static void delete_pulse_analyzer(void *p);
   static void deleteArray_pulse_analyzer(void *p);
   static void destruct_pulse_analyzer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::pulse_analyzer*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::pulse_analyzer) == sizeof(::ROOT::Shadow::pulse_analyzer));
      ::pulse_analyzer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::pulse_analyzer),0);
      static ::ROOT::TGenericClassInfo 
         instance("pulse_analyzer", "./pulse_analyzer.hh", 45,
                  typeid(::pulse_analyzer), DefineBehavior(ptr, ptr),
                  &pulse_analyzer_ShowMembers, &pulse_analyzer_Dictionary, isa_proxy, 4,
                  sizeof(::pulse_analyzer) );
      instance.SetNew(&new_pulse_analyzer);
      instance.SetNewArray(&newArray_pulse_analyzer);
      instance.SetDelete(&delete_pulse_analyzer);
      instance.SetDeleteArray(&deleteArray_pulse_analyzer);
      instance.SetDestructor(&destruct_pulse_analyzer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::pulse_analyzer*)
   {
      return GenerateInitInstanceLocal((::pulse_analyzer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pulse_analyzer*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pulse_analyzer_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::pulse_analyzer*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pulse_selector_base_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pulse_selector_base_Dictionary();
   static void delete_pulse_selector_base(void *p);
   static void deleteArray_pulse_selector_base(void *p);
   static void destruct_pulse_selector_base(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::pulse_selector_base*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::pulse_selector_base) == sizeof(::ROOT::Shadow::pulse_selector_base));
      ::pulse_selector_base *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::pulse_selector_base),0);
      static ::ROOT::TGenericClassInfo 
         instance("pulse_selector_base", "./pulse_selector_base.hh", 28,
                  typeid(::pulse_selector_base), DefineBehavior(ptr, ptr),
                  &pulse_selector_base_ShowMembers, &pulse_selector_base_Dictionary, isa_proxy, 4,
                  sizeof(::pulse_selector_base) );
      instance.SetDelete(&delete_pulse_selector_base);
      instance.SetDeleteArray(&deleteArray_pulse_selector_base);
      instance.SetDestructor(&destruct_pulse_selector_base);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::pulse_selector_base*)
   {
      return GenerateInitInstanceLocal((::pulse_selector_base*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pulse_selector_base*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pulse_selector_base_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::pulse_selector_base*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void pulse_selector_simple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pulse_selector_simple_Dictionary();
   static void *new_pulse_selector_simple(void *p = 0);
   static void *newArray_pulse_selector_simple(Long_t size, void *p);
   static void delete_pulse_selector_simple(void *p);
   static void deleteArray_pulse_selector_simple(void *p);
   static void destruct_pulse_selector_simple(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::pulse_selector_simple*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::pulse_selector_simple) == sizeof(::ROOT::Shadow::pulse_selector_simple));
      ::pulse_selector_simple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::pulse_selector_simple),0);
      static ::ROOT::TGenericClassInfo 
         instance("pulse_selector_simple", "./pulse_selector_simple.hh", 24,
                  typeid(::pulse_selector_simple), DefineBehavior(ptr, ptr),
                  &pulse_selector_simple_ShowMembers, &pulse_selector_simple_Dictionary, isa_proxy, 4,
                  sizeof(::pulse_selector_simple) );
      instance.SetNew(&new_pulse_selector_simple);
      instance.SetNewArray(&newArray_pulse_selector_simple);
      instance.SetDelete(&delete_pulse_selector_simple);
      instance.SetDeleteArray(&deleteArray_pulse_selector_simple);
      instance.SetDestructor(&destruct_pulse_selector_simple);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::pulse_selector_simple*)
   {
      return GenerateInitInstanceLocal((::pulse_selector_simple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::pulse_selector_simple*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pulse_selector_simple_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::pulse_selector_simple*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void led_pulse_selector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void led_pulse_selector_Dictionary();
   static void *new_led_pulse_selector(void *p = 0);
   static void *newArray_led_pulse_selector(Long_t size, void *p);
   static void delete_led_pulse_selector(void *p);
   static void deleteArray_led_pulse_selector(void *p);
   static void destruct_led_pulse_selector(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::led_pulse_selector*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::led_pulse_selector) == sizeof(::ROOT::Shadow::led_pulse_selector));
      ::led_pulse_selector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::led_pulse_selector),0);
      static ::ROOT::TGenericClassInfo 
         instance("led_pulse_selector", "./led_pulse_selector.hh", 42,
                  typeid(::led_pulse_selector), DefineBehavior(ptr, ptr),
                  &led_pulse_selector_ShowMembers, &led_pulse_selector_Dictionary, isa_proxy, 4,
                  sizeof(::led_pulse_selector) );
      instance.SetNew(&new_led_pulse_selector);
      instance.SetNewArray(&newArray_led_pulse_selector);
      instance.SetDelete(&delete_led_pulse_selector);
      instance.SetDeleteArray(&deleteArray_led_pulse_selector);
      instance.SetDestructor(&destruct_led_pulse_selector);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::led_pulse_selector*)
   {
      return GenerateInitInstanceLocal((::led_pulse_selector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::led_pulse_selector*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void led_pulse_selector_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::led_pulse_selector*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void led_pulse_analyzer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void led_pulse_analyzer_Dictionary();
   static void *new_led_pulse_analyzer(void *p = 0);
   static void *newArray_led_pulse_analyzer(Long_t size, void *p);
   static void delete_led_pulse_analyzer(void *p);
   static void deleteArray_led_pulse_analyzer(void *p);
   static void destruct_led_pulse_analyzer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::led_pulse_analyzer*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::led_pulse_analyzer) == sizeof(::ROOT::Shadow::led_pulse_analyzer));
      ::led_pulse_analyzer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::led_pulse_analyzer),0);
      static ::ROOT::TGenericClassInfo 
         instance("led_pulse_analyzer", "./led_pulse_analyzer.hh", 45,
                  typeid(::led_pulse_analyzer), DefineBehavior(ptr, ptr),
                  &led_pulse_analyzer_ShowMembers, &led_pulse_analyzer_Dictionary, isa_proxy, 4,
                  sizeof(::led_pulse_analyzer) );
      instance.SetNew(&new_led_pulse_analyzer);
      instance.SetNewArray(&newArray_led_pulse_analyzer);
      instance.SetDelete(&delete_led_pulse_analyzer);
      instance.SetDeleteArray(&deleteArray_led_pulse_analyzer);
      instance.SetDestructor(&destruct_led_pulse_analyzer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::led_pulse_analyzer*)
   {
      return GenerateInitInstanceLocal((::led_pulse_analyzer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::led_pulse_analyzer*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void led_pulse_analyzer_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::led_pulse_analyzer*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void waveform_sampler_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void waveform_sampler_Dictionary();
   static void *new_waveform_sampler(void *p = 0);
   static void *newArray_waveform_sampler(Long_t size, void *p);
   static void delete_waveform_sampler(void *p);
   static void deleteArray_waveform_sampler(void *p);
   static void destruct_waveform_sampler(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::waveform_sampler*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::waveform_sampler) == sizeof(::ROOT::Shadow::waveform_sampler));
      ::waveform_sampler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::waveform_sampler),0);
      static ::ROOT::TGenericClassInfo 
         instance("waveform_sampler", "./waveform_sampler.hh", 29,
                  typeid(::waveform_sampler), DefineBehavior(ptr, ptr),
                  &waveform_sampler_ShowMembers, &waveform_sampler_Dictionary, isa_proxy, 4,
                  sizeof(::waveform_sampler) );
      instance.SetNew(&new_waveform_sampler);
      instance.SetNewArray(&newArray_waveform_sampler);
      instance.SetDelete(&delete_waveform_sampler);
      instance.SetDeleteArray(&deleteArray_waveform_sampler);
      instance.SetDestructor(&destruct_waveform_sampler);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::waveform_sampler*)
   {
      return GenerateInitInstanceLocal((::waveform_sampler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::waveform_sampler*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void waveform_sampler_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::waveform_sampler*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void ana_processor_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ana_processor.
      typedef ::ROOT::Shadow::ana_processor ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ana_processor*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_analyzers", (void*)&sobj->_analyzers);
      R__insp.InspectMember("vector<ana_base*>", (void*)&sobj->_analyzers, "_analyzers.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ana_status", (void*)&sobj->_ana_status);
      R__insp.InspectMember("map<ana_base*,bool>", (void*)&sobj->_ana_status, "_ana_status.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_process", &sobj->_process);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nevents", &sobj->_nevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_index", &sobj->_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ofile_name", (void*)&sobj->_ofile_name);
      R__insp.InspectMember("string", (void*)&sobj->_ofile_name, "_ofile_name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_fout", &sobj->_fout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_storage", &sobj->_storage);
      R__insp.GenericShowMembers("decoder_base", ( ::decoder_base * )( (::ana_processor*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ana_processor(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ana_processor : new ::ana_processor;
   }
   static void *newArray_ana_processor(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::ana_processor[nElements] : new ::ana_processor[nElements];
   }
   // Wrapper around operator delete
   static void delete_ana_processor(void *p) {
      delete ((::ana_processor*)p);
   }
   static void deleteArray_ana_processor(void *p) {
      delete [] ((::ana_processor*)p);
   }
   static void destruct_ana_processor(void *p) {
      typedef ::ana_processor current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ana_processor

//______________________________________________________________________________
namespace ROOT {
   void reco_wf_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class reco_wf.
      typedef ::ROOT::Shadow::reco_wf ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::reco_wf*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_map", (void*)&sobj->_wf_map);
      R__insp.InspectMember("map<UInt_t,PMT::ch_waveform_t>", (void*)&sobj->_wf_map, "_wf_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channels", (void*)&sobj->_channels);
      R__insp.InspectMember("set<UInt_t>", (void*)&sobj->_channels, "_channels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_frame_width", &sobj->_frame_width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_event_id", &sobj->_event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ref_slice", &sobj->_ref_slice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ref_frame", &sobj->_ref_frame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_wf_histo", &sobj->_wf_histo);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::reco_wf*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_reco_wf(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::reco_wf : new ::reco_wf;
   }
   static void *newArray_reco_wf(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::reco_wf[nElements] : new ::reco_wf[nElements];
   }
   // Wrapper around operator delete
   static void delete_reco_wf(void *p) {
      delete ((::reco_wf*)p);
   }
   static void deleteArray_reco_wf(void *p) {
      delete [] ((::reco_wf*)p);
   }
   static void destruct_reco_wf(void *p) {
      typedef ::reco_wf current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::reco_wf

//______________________________________________________________________________
namespace ROOT {
   void beamgate_debugger_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class beamgate_debugger.
      typedef ::ROOT::Shadow::beamgate_debugger ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::beamgate_debugger*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hSampleSize", &sobj->_hSampleSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hPrePedMean", &sobj->_hPrePedMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hPostPedMean", &sobj->_hPostPedMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hPrePedRMS", &sobj->_hPrePedRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hPostPedRMS", &sobj->_hPostPedRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hMaxADC", &sobj->_hMaxADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hMaxTime", &sobj->_hMaxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_adc_max", &sobj->_adc_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch_cnt", &sobj->_ch_cnt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_beam_window_width", &sobj->_beam_window_width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pre_nsample", &sobj->_pre_nsample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_post_nsample", &sobj->_post_nsample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pre_sample", (void*)&sobj->_pre_sample);
      R__insp.InspectMember("vector<double>", (void*)&sobj->_pre_sample, "_pre_sample.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_post_sample", (void*)&sobj->_post_sample);
      R__insp.InspectMember("vector<double>", (void*)&sobj->_post_sample, "_post_sample.", false);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::beamgate_debugger*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_beamgate_debugger(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::beamgate_debugger : new ::beamgate_debugger;
   }
   static void *newArray_beamgate_debugger(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::beamgate_debugger[nElements] : new ::beamgate_debugger[nElements];
   }
   // Wrapper around operator delete
   static void delete_beamgate_debugger(void *p) {
      delete ((::beamgate_debugger*)p);
   }
   static void deleteArray_beamgate_debugger(void *p) {
      delete [] ((::beamgate_debugger*)p);
   }
   static void destruct_beamgate_debugger(void *p) {
      typedef ::beamgate_debugger current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::beamgate_debugger

//______________________________________________________________________________
namespace ROOT {
   void pmtbaseline_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pmtbaseline.
      typedef ::ROOT::Shadow::pmtbaseline ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::pmtbaseline*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedMean", &sobj->pedMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedRMS", &sobj->pedRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tailstudy", &sobj->tailstudy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tailMean", &sobj->tailMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tailRMS", &sobj->tailRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*channels", &sobj->channels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedMeanAll", &sobj->pedMeanAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedRMSAll", &sobj->pedRMSAll);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tailMeanCutrms", &sobj->tailMeanCutrms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tailRMSCutrms", &sobj->tailRMSCutrms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedMeanCutrms", &sobj->pedMeanCutrms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pedRMSCutrms", &sobj->pedRMSCutrms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*reco_time", &sobj->reco_time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*reco_time_diff", &sobj->reco_time_diff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rdbadwaveforms", &sobj->rdbadwaveforms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*bgbadwaveforms", &sobj->bgbadwaveforms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_use_tail", &sobj->_use_tail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_study_tail", &sobj->_study_tail);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_bgpoints", &sobj->_bgpoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_rdpoints", &sobj->_rdpoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ftailmean", &sobj->_ftailmean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ftailrms", &sobj->_ftailrms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_fpedmean", &sobj->_fpedmean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_fpedrms", &sobj->_fpedrms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nsigma", &sobj->_nsigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_min_peak", &sobj->_min_peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_max", &sobj->_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rd_waveforms", (void*)&sobj->rd_waveforms);
      R__insp.InspectMember("vector<double>", (void*)&sobj->rd_waveforms, "rd_waveforms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rdticks", (void*)&sobj->rdticks);
      R__insp.InspectMember("vector<double>", (void*)&sobj->rdticks, "rdticks.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bg_waveforms", (void*)&sobj->bg_waveforms);
      R__insp.InspectMember("vector<double>", (void*)&sobj->bg_waveforms, "bg_waveforms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bgticks", (void*)&sobj->bgticks);
      R__insp.InspectMember("vector<double>", (void*)&sobj->bgticks, "bgticks.", false);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::pmtbaseline*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pmtbaseline(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pmtbaseline : new ::pmtbaseline;
   }
   static void *newArray_pmtbaseline(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pmtbaseline[nElements] : new ::pmtbaseline[nElements];
   }
   // Wrapper around operator delete
   static void delete_pmtbaseline(void *p) {
      delete ((::pmtbaseline*)p);
   }
   static void deleteArray_pmtbaseline(void *p) {
      delete [] ((::pmtbaseline*)p);
   }
   static void destruct_pmtbaseline(void *p) {
      typedef ::pmtbaseline current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::pmtbaseline

//______________________________________________________________________________
namespace ROOT {
   void pulse_viewer_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pulse_viewer.
      typedef ::ROOT::Shadow::pulse_viewer ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::pulse_viewer*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_event_id", &sobj->_event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sum_charge", &sobj->_sum_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sum_peak", &sobj->_sum_peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_npulse", &sobj->_npulse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_channels", (void*)&sobj->_channels);
      R__insp.InspectMember("set<PMT::ch_number_t>", (void*)&sobj->_channels, "_channels.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch_iter", (void*)&sobj->_ch_iter);
      R__insp.InspectMember("set<unsigned short,less<unsigned short>,allocator<unsigned short> >::iterator", (void*)&sobj->_ch_iter, "_ch_iter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_count", (void*)&sobj->_pulse_count);
      R__insp.InspectMember("map<PMT::ch_number_t,std::pair<short,short> >", (void*)&sobj->_pulse_count, "_pulse_count.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_frame_id", (void*)&sobj->_pulse_frame_id);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<PMT::word_t> >", (void*)&sobj->_pulse_frame_id, "_pulse_frame_id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_sample_number", (void*)&sobj->_pulse_sample_number);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<PMT::word_t> >", (void*)&sobj->_pulse_sample_number, "_pulse_sample_number.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_tstart", (void*)&sobj->_pulse_tstart);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<double> >", (void*)&sobj->_pulse_tstart, "_pulse_tstart.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_tstart_reco", (void*)&sobj->_pulse_tstart_reco);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<double> >", (void*)&sobj->_pulse_tstart_reco, "_pulse_tstart_reco.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_tend", (void*)&sobj->_pulse_tend);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<double> >", (void*)&sobj->_pulse_tend, "_pulse_tend.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_amp", (void*)&sobj->_pulse_amp);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<double> >", (void*)&sobj->_pulse_amp, "_pulse_amp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_charge", (void*)&sobj->_pulse_charge);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<double> >", (void*)&sobj->_pulse_charge, "_pulse_charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_pedbase", (void*)&sobj->_pulse_pedbase);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<double> >", (void*)&sobj->_pulse_pedbase, "_pulse_pedbase.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_pedrms", (void*)&sobj->_pulse_pedrms);
      R__insp.InspectMember("map<PMT::ch_number_t,std::vector<double> >", (void*)&sobj->_pulse_pedrms, "_pulse_pedrms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_waveforms", (void*)&sobj->_waveforms);
      R__insp.InspectMember("map<PMT::ch_number_t,std::map<PMT::word_t,std::map<PMT::word_t,std::vector<PMT::ch_adc_t> > > >", (void*)&sobj->_waveforms, "_waveforms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_cWF", &sobj->_cWF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_pTitle", &sobj->_pTitle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_pData", &sobj->_pData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_pNote", &sobj->_pNote);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_pWF", &sobj->_pWF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_fTitle", &sobj->_fTitle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_fNote", &sobj->_fNote);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_hWF", &sobj->_hWF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_lStart", &sobj->_lStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_lEnd", &sobj->_lEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_lBase", &sobj->_lBase);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_lRMSTop", &sobj->_lRMSTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_lRMSBottom", &sobj->_lRMSBottom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_lTop", &sobj->_lTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tstart", (void*)&sobj->_cut_tstart);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tstart, "_cut_tstart.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tstart_reco", (void*)&sobj->_cut_tstart_reco);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tstart_reco, "_cut_tstart_reco.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tend", (void*)&sobj->_cut_tend);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tend, "_cut_tend.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_amp", (void*)&sobj->_cut_amp);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_amp, "_cut_amp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_charge", (void*)&sobj->_cut_charge);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_charge, "_cut_charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_pedbase", (void*)&sobj->_cut_pedbase);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_pedbase, "_cut_pedbase.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_pedrms", (void*)&sobj->_cut_pedrms);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_pedrms, "_cut_pedrms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_sum_charge", (void*)&sobj->_cut_sum_charge);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_sum_charge, "_cut_sum_charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_sum_peak", (void*)&sobj->_cut_sum_peak);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_sum_peak, "_cut_sum_peak.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_npulse", (void*)&sobj->_cut_npulse);
      R__insp.InspectMember("pair<UInt_t,UInt_t>", (void*)&sobj->_cut_npulse, "_cut_npulse.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_event_id", (void*)&sobj->_cut_event_id);
      R__insp.InspectMember("pair<PMT::word_t,PMT::word_t>", (void*)&sobj->_cut_event_id, "_cut_event_id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_channels", (void*)&sobj->_cut_channels);
      R__insp.InspectMember("pair<PMT::ch_number_t,PMT::ch_number_t>", (void*)&sobj->_cut_channels, "_cut_channels.", false);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::pulse_viewer*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pulse_viewer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pulse_viewer : new ::pulse_viewer;
   }
   static void *newArray_pulse_viewer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pulse_viewer[nElements] : new ::pulse_viewer[nElements];
   }
   // Wrapper around operator delete
   static void delete_pulse_viewer(void *p) {
      delete ((::pulse_viewer*)p);
   }
   static void deleteArray_pulse_viewer(void *p) {
      delete [] ((::pulse_viewer*)p);
   }
   static void destruct_pulse_viewer(void *p) {
      typedef ::pulse_viewer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::pulse_viewer

//______________________________________________________________________________
namespace ROOT {
   void pmtbaseline_ana_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pmtbaseline_ana.
      typedef ::ROOT::Shadow::pmtbaseline_ana ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::pmtbaseline_ana*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hArray_PedMean", (void*)&sobj->_hArray_PedMean);
      R__insp.InspectMember("map<PMT::ch_number_t,TH1D*>", (void*)&sobj->_hArray_PedMean, "_hArray_PedMean.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hArray_PedRMS", (void*)&sobj->_hArray_PedRMS);
      R__insp.InspectMember("map<PMT::ch_number_t,TH1D*>", (void*)&sobj->_hArray_PedRMS, "_hArray_PedRMS.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hArray_Charge", (void*)&sobj->_hArray_Charge);
      R__insp.InspectMember("map<PMT::ch_number_t,TH1D*>", (void*)&sobj->_hArray_Charge, "_hArray_Charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hArray_Peak", (void*)&sobj->_hArray_Peak);
      R__insp.InspectMember("map<PMT::ch_number_t,TH1D*>", (void*)&sobj->_hArray_Peak, "_hArray_Peak.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tstart", (void*)&sobj->_cut_tstart);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tstart, "_cut_tstart.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tstart_reco", (void*)&sobj->_cut_tstart_reco);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tstart_reco, "_cut_tstart_reco.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tend", (void*)&sobj->_cut_tend);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tend, "_cut_tend.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_amp", (void*)&sobj->_cut_amp);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_amp, "_cut_amp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_charge", (void*)&sobj->_cut_charge);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_charge, "_cut_charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_pedbase", (void*)&sobj->_cut_pedbase);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_pedbase, "_cut_pedbase.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_pedrms", (void*)&sobj->_cut_pedrms);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_pedrms, "_cut_pedrms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_sum_charge", (void*)&sobj->_cut_sum_charge);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_sum_charge, "_cut_sum_charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_sum_peak", (void*)&sobj->_cut_sum_peak);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_sum_peak, "_cut_sum_peak.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_npulse", (void*)&sobj->_cut_npulse);
      R__insp.InspectMember("pair<UInt_t,UInt_t>", (void*)&sobj->_cut_npulse, "_cut_npulse.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_event_id", (void*)&sobj->_cut_event_id);
      R__insp.InspectMember("pair<PMT::word_t,PMT::word_t>", (void*)&sobj->_cut_event_id, "_cut_event_id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_channels", (void*)&sobj->_cut_channels);
      R__insp.InspectMember("pair<PMT::ch_number_t,PMT::ch_number_t>", (void*)&sobj->_cut_channels, "_cut_channels.", false);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::pmtbaseline_ana*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pmtbaseline_ana(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pmtbaseline_ana : new ::pmtbaseline_ana;
   }
   static void *newArray_pmtbaseline_ana(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pmtbaseline_ana[nElements] : new ::pmtbaseline_ana[nElements];
   }
   // Wrapper around operator delete
   static void delete_pmtbaseline_ana(void *p) {
      delete ((::pmtbaseline_ana*)p);
   }
   static void deleteArray_pmtbaseline_ana(void *p) {
      delete [] ((::pmtbaseline_ana*)p);
   }
   static void destruct_pmtbaseline_ana(void *p) {
      typedef ::pmtbaseline_ana current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::pmtbaseline_ana

//______________________________________________________________________________
namespace ROOT {
   void pulse_analyzer_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pulse_analyzer.
      typedef ::ROOT::Shadow::pulse_analyzer ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::pulse_analyzer*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_event_id", &sobj->_event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch_frame_id", &sobj->_ch_frame_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch_sample_id", &sobj->_ch_sample_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_disc_id", &sobj->_disc_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_type", &sobj->_pulse_type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_ch_tree", &sobj->_ch_tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch", &sobj->_ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nsample", &sobj->_nsample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_charge", &sobj->_wf_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_peak", &sobj->_wf_peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_ts", &sobj->_wf_ts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_tm", &sobj->_wf_tm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_te", &sobj->_wf_te);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ped_mean", &sobj->_ped_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ped_rms", &sobj->_ped_rms);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::pulse_analyzer*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pulse_analyzer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pulse_analyzer : new ::pulse_analyzer;
   }
   static void *newArray_pulse_analyzer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pulse_analyzer[nElements] : new ::pulse_analyzer[nElements];
   }
   // Wrapper around operator delete
   static void delete_pulse_analyzer(void *p) {
      delete ((::pulse_analyzer*)p);
   }
   static void deleteArray_pulse_analyzer(void *p) {
      delete [] ((::pulse_analyzer*)p);
   }
   static void destruct_pulse_analyzer(void *p) {
      typedef ::pulse_analyzer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::pulse_analyzer

//______________________________________________________________________________
namespace ROOT {
   void led_pulse_selector_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class led_pulse_selector.
      typedef ::ROOT::Shadow::led_pulse_selector ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::led_pulse_selector*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ref_ch", &sobj->_ref_ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_frame_size", &sobj->_frame_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_time_cut", &sobj->_time_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ref_time", (void*)&sobj->_ref_time);
      R__insp.InspectMember("set<PMT::word_t>", (void*)&sobj->_ref_time, "_ref_time.", false);
      R__insp.GenericShowMembers("pulse_selector_simple", ( ::pulse_selector_simple * )( (::led_pulse_selector*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_led_pulse_selector(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::led_pulse_selector : new ::led_pulse_selector;
   }
   static void *newArray_led_pulse_selector(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::led_pulse_selector[nElements] : new ::led_pulse_selector[nElements];
   }
   // Wrapper around operator delete
   static void delete_led_pulse_selector(void *p) {
      delete ((::led_pulse_selector*)p);
   }
   static void deleteArray_led_pulse_selector(void *p) {
      delete [] ((::led_pulse_selector*)p);
   }
   static void destruct_led_pulse_selector(void *p) {
      typedef ::led_pulse_selector current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::led_pulse_selector

//______________________________________________________________________________
namespace ROOT {
   void led_pulse_analyzer_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class led_pulse_analyzer.
      typedef ::ROOT::Shadow::led_pulse_analyzer ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::led_pulse_analyzer*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_event_id", &sobj->_event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch_frame_id", &sobj->_ch_frame_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch_sample_id", &sobj->_ch_sample_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_disc_id", &sobj->_disc_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_ch_tree", &sobj->_ch_tree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch", &sobj->_ch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nsample", &sobj->_nsample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_charge", &sobj->_wf_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_peak", &sobj->_wf_peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_ts", &sobj->_wf_ts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_tm", &sobj->_wf_tm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_te", &sobj->_wf_te);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ped_mean", &sobj->_ped_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ped_rms", &sobj->_ped_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_selector", (void*)&sobj->_selector);
      R__insp.InspectMember("led_pulse_selector", (void*)&sobj->_selector, "_selector.", false);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::led_pulse_analyzer*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_led_pulse_analyzer(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::led_pulse_analyzer : new ::led_pulse_analyzer;
   }
   static void *newArray_led_pulse_analyzer(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::led_pulse_analyzer[nElements] : new ::led_pulse_analyzer[nElements];
   }
   // Wrapper around operator delete
   static void delete_led_pulse_analyzer(void *p) {
      delete ((::led_pulse_analyzer*)p);
   }
   static void deleteArray_led_pulse_analyzer(void *p) {
      delete [] ((::led_pulse_analyzer*)p);
   }
   static void destruct_led_pulse_analyzer(void *p) {
      typedef ::led_pulse_analyzer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::led_pulse_analyzer

//______________________________________________________________________________
namespace ROOT {
   void pulse_selector_base_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pulse_selector_base.
      typedef ::ROOT::Shadow::pulse_selector_base ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::pulse_selector_base*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pulse_type", &sobj->_pulse_type);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::pulse_selector_base*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_pulse_selector_base(void *p) {
      delete ((::pulse_selector_base*)p);
   }
   static void deleteArray_pulse_selector_base(void *p) {
      delete [] ((::pulse_selector_base*)p);
   }
   static void destruct_pulse_selector_base(void *p) {
      typedef ::pulse_selector_base current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::pulse_selector_base

//______________________________________________________________________________
namespace ROOT {
   void pulse_selector_simple_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pulse_selector_simple.
      typedef ::ROOT::Shadow::pulse_selector_simple ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::pulse_selector_simple*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tstart", (void*)&sobj->_cut_tstart);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tstart, "_cut_tstart.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tstart_reco", (void*)&sobj->_cut_tstart_reco);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tstart_reco, "_cut_tstart_reco.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_tend", (void*)&sobj->_cut_tend);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_tend, "_cut_tend.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_amp", (void*)&sobj->_cut_amp);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_amp, "_cut_amp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_charge", (void*)&sobj->_cut_charge);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_charge, "_cut_charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_pedbase", (void*)&sobj->_cut_pedbase);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_pedbase, "_cut_pedbase.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_pedrms", (void*)&sobj->_cut_pedrms);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_pedrms, "_cut_pedrms.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_sum_charge", (void*)&sobj->_cut_sum_charge);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_sum_charge, "_cut_sum_charge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_sum_peak", (void*)&sobj->_cut_sum_peak);
      R__insp.InspectMember("pair<double,double>", (void*)&sobj->_cut_sum_peak, "_cut_sum_peak.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_npulse", (void*)&sobj->_cut_npulse);
      R__insp.InspectMember("pair<UInt_t,UInt_t>", (void*)&sobj->_cut_npulse, "_cut_npulse.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_frame_id", (void*)&sobj->_cut_frame_id);
      R__insp.InspectMember("pair<PMT::word_t,PMT::word_t>", (void*)&sobj->_cut_frame_id, "_cut_frame_id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_timeslice", (void*)&sobj->_cut_timeslice);
      R__insp.InspectMember("pair<PMT::word_t,PMT::word_t>", (void*)&sobj->_cut_timeslice, "_cut_timeslice.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cut_channels", (void*)&sobj->_cut_channels);
      R__insp.InspectMember("pair<PMT::ch_number_t,PMT::ch_number_t>", (void*)&sobj->_cut_channels, "_cut_channels.", false);
      R__insp.GenericShowMembers("pulse_selector_base", ( ::pulse_selector_base * )( (::pulse_selector_simple*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_pulse_selector_simple(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pulse_selector_simple : new ::pulse_selector_simple;
   }
   static void *newArray_pulse_selector_simple(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::pulse_selector_simple[nElements] : new ::pulse_selector_simple[nElements];
   }
   // Wrapper around operator delete
   static void delete_pulse_selector_simple(void *p) {
      delete ((::pulse_selector_simple*)p);
   }
   static void deleteArray_pulse_selector_simple(void *p) {
      delete [] ((::pulse_selector_simple*)p);
   }
   static void destruct_pulse_selector_simple(void *p) {
      typedef ::pulse_selector_simple current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::pulse_selector_simple

//______________________________________________________________________________
namespace ROOT {
   void waveform_sampler_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class waveform_sampler.
      typedef ::ROOT::Shadow::waveform_sampler ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::waveform_sampler*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sel_info", (void*)&sobj->_sel_info);
      R__insp.InspectMember("map<PMT::ch_number_t,std::map<PMT::word_t,std::set<PMT::word_t> > >", (void*)&sobj->_sel_info, "_sel_info.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_selector", &sobj->_selector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hWF_map", (void*)&sobj->_hWF_map);
      R__insp.InspectMember("map<PMT::ch_number_t,TH2D*>", (void*)&sobj->_hWF_map, "_hWF_map.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wf_length", &sobj->_wf_length);
      R__insp.GenericShowMembers("ana_base", ( ::ana_base * )( (::waveform_sampler*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_waveform_sampler(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::waveform_sampler : new ::waveform_sampler;
   }
   static void *newArray_waveform_sampler(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::waveform_sampler[nElements] : new ::waveform_sampler[nElements];
   }
   // Wrapper around operator delete
   static void delete_waveform_sampler(void *p) {
      delete ((::waveform_sampler*)p);
   }
   static void deleteArray_waveform_sampler(void *p) {
      delete [] ((::waveform_sampler*)p);
   }
   static void destruct_waveform_sampler(void *p) {
      typedef ::waveform_sampler current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::waveform_sampler

namespace ROOT {
   void maplEana_basemUcOboolgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEana_basemUcOboolgR_Dictionary();
   static void *new_maplEana_basemUcOboolgR(void *p = 0);
   static void *newArray_maplEana_basemUcOboolgR(Long_t size, void *p);
   static void delete_maplEana_basemUcOboolgR(void *p);
   static void deleteArray_maplEana_basemUcOboolgR(void *p);
   static void destruct_maplEana_basemUcOboolgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<ana_base*,bool>*)
   {
      map<ana_base*,bool> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<ana_base*,bool>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<ana_base*,bool>", -2, "prec_stl/map", 63,
                  typeid(map<ana_base*,bool>), DefineBehavior(ptr, ptr),
                  0, &maplEana_basemUcOboolgR_Dictionary, isa_proxy, 0,
                  sizeof(map<ana_base*,bool>) );
      instance.SetNew(&new_maplEana_basemUcOboolgR);
      instance.SetNewArray(&newArray_maplEana_basemUcOboolgR);
      instance.SetDelete(&delete_maplEana_basemUcOboolgR);
      instance.SetDeleteArray(&deleteArray_maplEana_basemUcOboolgR);
      instance.SetDestructor(&destruct_maplEana_basemUcOboolgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<ana_base*,bool> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<ana_base*,bool>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEana_basemUcOboolgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<ana_base*,bool>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEana_basemUcOboolgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<ana_base*,bool> : new map<ana_base*,bool>;
   }
   static void *newArray_maplEana_basemUcOboolgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<ana_base*,bool>[nElements] : new map<ana_base*,bool>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEana_basemUcOboolgR(void *p) {
      delete ((map<ana_base*,bool>*)p);
   }
   static void deleteArray_maplEana_basemUcOboolgR(void *p) {
      delete [] ((map<ana_base*,bool>*)p);
   }
   static void destruct_maplEana_basemUcOboolgR(void *p) {
      typedef map<ana_base*,bool> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<ana_base*,bool>

namespace ROOT {
   void maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR_Dictionary();
   static void *new_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(void *p);
   static void destruct_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,map<unsigned int,vector<unsigned short> > >*)
   {
      map<unsigned int,map<unsigned int,vector<unsigned short> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,map<unsigned int,vector<unsigned short> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,map<unsigned int,vector<unsigned short> > >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned int,map<unsigned int,vector<unsigned short> > >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,map<unsigned int,vector<unsigned short> > >) );
      instance.SetNew(&new_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,map<unsigned int,vector<unsigned short> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,map<unsigned int,vector<unsigned short> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,map<unsigned int,vector<unsigned short> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,map<unsigned int,vector<unsigned short> > > : new map<unsigned int,map<unsigned int,vector<unsigned short> > >;
   }
   static void *newArray_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,map<unsigned int,vector<unsigned short> > >[nElements] : new map<unsigned int,map<unsigned int,vector<unsigned short> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete ((map<unsigned int,map<unsigned int,vector<unsigned short> > >*)p);
   }
   static void deleteArray_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      delete [] ((map<unsigned int,map<unsigned int,vector<unsigned short> > >*)p);
   }
   static void destruct_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgR(void *p) {
      typedef map<unsigned int,map<unsigned int,vector<unsigned short> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,map<unsigned int,vector<unsigned short> > >

namespace ROOT {
   void maplEunsignedsPintcOsetlEunsignedsPintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOsetlEunsignedsPintgRsPgR_Dictionary();
   static void *new_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(void *p);
   static void destruct_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,set<unsigned int> >*)
   {
      map<unsigned int,set<unsigned int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,set<unsigned int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,set<unsigned int> >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned int,set<unsigned int> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOsetlEunsignedsPintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,set<unsigned int> >) );
      instance.SetNew(&new_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,set<unsigned int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,set<unsigned int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOsetlEunsignedsPintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,set<unsigned int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,set<unsigned int> > : new map<unsigned int,set<unsigned int> >;
   }
   static void *newArray_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,set<unsigned int> >[nElements] : new map<unsigned int,set<unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(void *p) {
      delete ((map<unsigned int,set<unsigned int> >*)p);
   }
   static void deleteArray_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(void *p) {
      delete [] ((map<unsigned int,set<unsigned int> >*)p);
   }
   static void destruct_maplEunsignedsPintcOsetlEunsignedsPintgRsPgR(void *p) {
      typedef map<unsigned int,set<unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,set<unsigned int> >

namespace ROOT {
   void maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR_Dictionary();
   static void *new_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(void *p);
   static void destruct_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned int,vector<unsigned short> >*)
   {
      map<unsigned int,vector<unsigned short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned int,vector<unsigned short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned int,vector<unsigned short> >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned int,vector<unsigned short> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned int,vector<unsigned short> >) );
      instance.SetNew(&new_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned int,vector<unsigned short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned int,vector<unsigned short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned int,vector<unsigned short> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,vector<unsigned short> > : new map<unsigned int,vector<unsigned short> >;
   }
   static void *newArray_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned int,vector<unsigned short> >[nElements] : new map<unsigned int,vector<unsigned short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(void *p) {
      delete ((map<unsigned int,vector<unsigned short> >*)p);
   }
   static void deleteArray_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(void *p) {
      delete [] ((map<unsigned int,vector<unsigned short> >*)p);
   }
   static void destruct_maplEunsignedsPintcOvectorlEunsignedsPshortgRsPgR(void *p) {
      typedef map<unsigned int,vector<unsigned short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned int,vector<unsigned short> >

namespace ROOT {
   void maplEunsignedsPshortcOTH1DmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPshortcOTH1DmUgR_Dictionary();
   static void *new_maplEunsignedsPshortcOTH1DmUgR(void *p = 0);
   static void *newArray_maplEunsignedsPshortcOTH1DmUgR(Long_t size, void *p);
   static void delete_maplEunsignedsPshortcOTH1DmUgR(void *p);
   static void deleteArray_maplEunsignedsPshortcOTH1DmUgR(void *p);
   static void destruct_maplEunsignedsPshortcOTH1DmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned short,TH1D*>*)
   {
      map<unsigned short,TH1D*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned short,TH1D*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned short,TH1D*>", -2, "prec_stl/map", 63,
                  typeid(map<unsigned short,TH1D*>), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPshortcOTH1DmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned short,TH1D*>) );
      instance.SetNew(&new_maplEunsignedsPshortcOTH1DmUgR);
      instance.SetNewArray(&newArray_maplEunsignedsPshortcOTH1DmUgR);
      instance.SetDelete(&delete_maplEunsignedsPshortcOTH1DmUgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPshortcOTH1DmUgR);
      instance.SetDestructor(&destruct_maplEunsignedsPshortcOTH1DmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned short,TH1D*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned short,TH1D*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPshortcOTH1DmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned short,TH1D*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPshortcOTH1DmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,TH1D*> : new map<unsigned short,TH1D*>;
   }
   static void *newArray_maplEunsignedsPshortcOTH1DmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,TH1D*>[nElements] : new map<unsigned short,TH1D*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPshortcOTH1DmUgR(void *p) {
      delete ((map<unsigned short,TH1D*>*)p);
   }
   static void deleteArray_maplEunsignedsPshortcOTH1DmUgR(void *p) {
      delete [] ((map<unsigned short,TH1D*>*)p);
   }
   static void destruct_maplEunsignedsPshortcOTH1DmUgR(void *p) {
      typedef map<unsigned short,TH1D*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned short,TH1D*>

namespace ROOT {
   void maplEunsignedsPshortcOTH2DmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPshortcOTH2DmUgR_Dictionary();
   static void *new_maplEunsignedsPshortcOTH2DmUgR(void *p = 0);
   static void *newArray_maplEunsignedsPshortcOTH2DmUgR(Long_t size, void *p);
   static void delete_maplEunsignedsPshortcOTH2DmUgR(void *p);
   static void deleteArray_maplEunsignedsPshortcOTH2DmUgR(void *p);
   static void destruct_maplEunsignedsPshortcOTH2DmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned short,TH2D*>*)
   {
      map<unsigned short,TH2D*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned short,TH2D*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned short,TH2D*>", -2, "prec_stl/map", 63,
                  typeid(map<unsigned short,TH2D*>), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPshortcOTH2DmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned short,TH2D*>) );
      instance.SetNew(&new_maplEunsignedsPshortcOTH2DmUgR);
      instance.SetNewArray(&newArray_maplEunsignedsPshortcOTH2DmUgR);
      instance.SetDelete(&delete_maplEunsignedsPshortcOTH2DmUgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPshortcOTH2DmUgR);
      instance.SetDestructor(&destruct_maplEunsignedsPshortcOTH2DmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned short,TH2D*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned short,TH2D*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPshortcOTH2DmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned short,TH2D*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPshortcOTH2DmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,TH2D*> : new map<unsigned short,TH2D*>;
   }
   static void *newArray_maplEunsignedsPshortcOTH2DmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,TH2D*>[nElements] : new map<unsigned short,TH2D*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPshortcOTH2DmUgR(void *p) {
      delete ((map<unsigned short,TH2D*>*)p);
   }
   static void deleteArray_maplEunsignedsPshortcOTH2DmUgR(void *p) {
      delete [] ((map<unsigned short,TH2D*>*)p);
   }
   static void destruct_maplEunsignedsPshortcOTH2DmUgR(void *p) {
      typedef map<unsigned short,TH2D*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned short,TH2D*>

namespace ROOT {
   void maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR_Dictionary();
   static void *new_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(void *p);
   static void destruct_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >*)
   {
      map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >) );
      instance.SetNew(&new_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > > : new map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >;
   }
   static void *newArray_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >[nElements] : new map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(void *p) {
      delete ((map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >*)p);
   }
   static void deleteArray_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(void *p) {
      delete [] ((map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >*)p);
   }
   static void destruct_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortgRsPgRsPgRsPgR(void *p) {
      typedef map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short> > > >

namespace ROOT {
   void maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR_Dictionary();
   static void *new_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(void *p);
   static void destruct_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned short,map<unsigned int,set<unsigned int> > >*)
   {
      map<unsigned short,map<unsigned int,set<unsigned int> > > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned short,map<unsigned int,set<unsigned int> > >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned short,map<unsigned int,set<unsigned int> > >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned short,map<unsigned int,set<unsigned int> > >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned short,map<unsigned int,set<unsigned int> > >) );
      instance.SetNew(&new_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned short,map<unsigned int,set<unsigned int> > > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned short,map<unsigned int,set<unsigned int> > >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned short,map<unsigned int,set<unsigned int> > >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,map<unsigned int,set<unsigned int> > > : new map<unsigned short,map<unsigned int,set<unsigned int> > >;
   }
   static void *newArray_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,map<unsigned int,set<unsigned int> > >[nElements] : new map<unsigned short,map<unsigned int,set<unsigned int> > >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(void *p) {
      delete ((map<unsigned short,map<unsigned int,set<unsigned int> > >*)p);
   }
   static void deleteArray_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(void *p) {
      delete [] ((map<unsigned short,map<unsigned int,set<unsigned int> > >*)p);
   }
   static void destruct_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintgRsPgRsPgR(void *p) {
      typedef map<unsigned short,map<unsigned int,set<unsigned int> > > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned short,map<unsigned int,set<unsigned int> > >

namespace ROOT {
   void maplEunsignedsPshortcOpairlEshortcOshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPshortcOpairlEshortcOshortgRsPgR_Dictionary();
   static void *new_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(void *p);
   static void destruct_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned short,pair<short,short> >*)
   {
      map<unsigned short,pair<short,short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned short,pair<short,short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned short,pair<short,short> >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned short,pair<short,short> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPshortcOpairlEshortcOshortgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned short,pair<short,short> >) );
      instance.SetNew(&new_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned short,pair<short,short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned short,pair<short,short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPshortcOpairlEshortcOshortgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned short,pair<short,short> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,pair<short,short> > : new map<unsigned short,pair<short,short> >;
   }
   static void *newArray_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,pair<short,short> >[nElements] : new map<unsigned short,pair<short,short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(void *p) {
      delete ((map<unsigned short,pair<short,short> >*)p);
   }
   static void deleteArray_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(void *p) {
      delete [] ((map<unsigned short,pair<short,short> >*)p);
   }
   static void destruct_maplEunsignedsPshortcOpairlEshortcOshortgRsPgR(void *p) {
      typedef map<unsigned short,pair<short,short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned short,pair<short,short> >

namespace ROOT {
   void maplEunsignedsPshortcOvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPshortcOvectorlEdoublegRsPgR_Dictionary();
   static void *new_maplEunsignedsPshortcOvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPshortcOvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPshortcOvectorlEdoublegRsPgR(void *p);
   static void deleteArray_maplEunsignedsPshortcOvectorlEdoublegRsPgR(void *p);
   static void destruct_maplEunsignedsPshortcOvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned short,vector<double> >*)
   {
      map<unsigned short,vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned short,vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned short,vector<double> >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned short,vector<double> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPshortcOvectorlEdoublegRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned short,vector<double> >) );
      instance.SetNew(&new_maplEunsignedsPshortcOvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPshortcOvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPshortcOvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPshortcOvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPshortcOvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned short,vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned short,vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPshortcOvectorlEdoublegRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned short,vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPshortcOvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,vector<double> > : new map<unsigned short,vector<double> >;
   }
   static void *newArray_maplEunsignedsPshortcOvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,vector<double> >[nElements] : new map<unsigned short,vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPshortcOvectorlEdoublegRsPgR(void *p) {
      delete ((map<unsigned short,vector<double> >*)p);
   }
   static void deleteArray_maplEunsignedsPshortcOvectorlEdoublegRsPgR(void *p) {
      delete [] ((map<unsigned short,vector<double> >*)p);
   }
   static void destruct_maplEunsignedsPshortcOvectorlEdoublegRsPgR(void *p) {
      typedef map<unsigned short,vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned short,vector<double> >

namespace ROOT {
   void maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR_Dictionary();
   static void *new_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(void *p = 0);
   static void *newArray_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(Long_t size, void *p);
   static void delete_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(void *p);
   static void deleteArray_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(void *p);
   static void destruct_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<unsigned short,vector<unsigned int> >*)
   {
      map<unsigned short,vector<unsigned int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<unsigned short,vector<unsigned int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<unsigned short,vector<unsigned int> >", -2, "prec_stl/map", 63,
                  typeid(map<unsigned short,vector<unsigned int> >), DefineBehavior(ptr, ptr),
                  0, &maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<unsigned short,vector<unsigned int> >) );
      instance.SetNew(&new_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR);
      instance.SetNewArray(&newArray_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR);
      instance.SetDelete(&delete_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR);
      instance.SetDestructor(&destruct_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<unsigned short,vector<unsigned int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<unsigned short,vector<unsigned int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<unsigned short,vector<unsigned int> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,vector<unsigned int> > : new map<unsigned short,vector<unsigned int> >;
   }
   static void *newArray_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<unsigned short,vector<unsigned int> >[nElements] : new map<unsigned short,vector<unsigned int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(void *p) {
      delete ((map<unsigned short,vector<unsigned int> >*)p);
   }
   static void deleteArray_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(void *p) {
      delete [] ((map<unsigned short,vector<unsigned int> >*)p);
   }
   static void destruct_maplEunsignedsPshortcOvectorlEunsignedsPintgRsPgR(void *p) {
      typedef map<unsigned short,vector<unsigned int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<unsigned short,vector<unsigned int> >

namespace ROOT {
   void setlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEunsignedsPintgR_Dictionary();
   static void *new_setlEunsignedsPintgR(void *p = 0);
   static void *newArray_setlEunsignedsPintgR(Long_t size, void *p);
   static void delete_setlEunsignedsPintgR(void *p);
   static void deleteArray_setlEunsignedsPintgR(void *p);
   static void destruct_setlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<unsigned int>*)
   {
      set<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<unsigned int>", -2, "prec_stl/set", 49,
                  typeid(set<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &setlEunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(set<unsigned int>) );
      instance.SetNew(&new_setlEunsignedsPintgR);
      instance.SetNewArray(&newArray_setlEunsignedsPintgR);
      instance.SetDelete(&delete_setlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_setlEunsignedsPintgR);
      instance.SetDestructor(&destruct_setlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<unsigned int> : new set<unsigned int>;
   }
   static void *newArray_setlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<unsigned int>[nElements] : new set<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEunsignedsPintgR(void *p) {
      delete ((set<unsigned int>*)p);
   }
   static void deleteArray_setlEunsignedsPintgR(void *p) {
      delete [] ((set<unsigned int>*)p);
   }
   static void destruct_setlEunsignedsPintgR(void *p) {
      typedef set<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<unsigned int>

namespace ROOT {
   void setlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEunsignedsPshortgR_Dictionary();
   static void *new_setlEunsignedsPshortgR(void *p = 0);
   static void *newArray_setlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_setlEunsignedsPshortgR(void *p);
   static void deleteArray_setlEunsignedsPshortgR(void *p);
   static void destruct_setlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<unsigned short>*)
   {
      set<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<unsigned short>", -2, "prec_stl/set", 49,
                  typeid(set<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &setlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(set<unsigned short>) );
      instance.SetNew(&new_setlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_setlEunsignedsPshortgR);
      instance.SetDelete(&delete_setlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_setlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_setlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<unsigned short> : new set<unsigned short>;
   }
   static void *newArray_setlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<unsigned short>[nElements] : new set<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEunsignedsPshortgR(void *p) {
      delete ((set<unsigned short>*)p);
   }
   static void deleteArray_setlEunsignedsPshortgR(void *p) {
      delete [] ((set<unsigned short>*)p);
   }
   static void destruct_setlEunsignedsPshortgR(void *p) {
      typedef set<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<unsigned short>

namespace ROOT {
   void vectorlEana_basemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEana_basemUgR_Dictionary();
   static void *new_vectorlEana_basemUgR(void *p = 0);
   static void *newArray_vectorlEana_basemUgR(Long_t size, void *p);
   static void delete_vectorlEana_basemUgR(void *p);
   static void deleteArray_vectorlEana_basemUgR(void *p);
   static void destruct_vectorlEana_basemUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ana_base*>*)
   {
      vector<ana_base*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ana_base*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ana_base*>", -2, "prec_stl/vector", 49,
                  typeid(vector<ana_base*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEana_basemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ana_base*>) );
      instance.SetNew(&new_vectorlEana_basemUgR);
      instance.SetNewArray(&newArray_vectorlEana_basemUgR);
      instance.SetDelete(&delete_vectorlEana_basemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEana_basemUgR);
      instance.SetDestructor(&destruct_vectorlEana_basemUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ana_base*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ana_base*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEana_basemUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ana_base*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEana_basemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ana_base*> : new vector<ana_base*>;
   }
   static void *newArray_vectorlEana_basemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ana_base*>[nElements] : new vector<ana_base*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEana_basemUgR(void *p) {
      delete ((vector<ana_base*>*)p);
   }
   static void deleteArray_vectorlEana_basemUgR(void *p) {
      delete [] ((vector<ana_base*>*)p);
   }
   static void destruct_vectorlEana_basemUgR(void *p) {
      typedef vector<ana_base*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ana_base*>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPintgR_Dictionary();
   static void *new_vectorlEunsignedsPintgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPintgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPintgR(void *p);
   static void deleteArray_vectorlEunsignedsPintgR(void *p);
   static void destruct_vectorlEunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned int>*)
   {
      vector<unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned int>", -2, "vector.dll", 0,
                  typeid(vector<unsigned int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned int>) );
      instance.SetNew(&new_vectorlEunsignedsPintgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPintgR);
      instance.SetDelete(&delete_vectorlEunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPintgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int> : new vector<unsigned int>;
   }
   static void *newArray_vectorlEunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned int>[nElements] : new vector<unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPintgR(void *p) {
      delete ((vector<unsigned int>*)p);
   }
   static void deleteArray_vectorlEunsignedsPintgR(void *p) {
      delete [] ((vector<unsigned int>*)p);
   }
   static void destruct_vectorlEunsignedsPintgR(void *p) {
      typedef vector<unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned int>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

/********************************************************
* AnalysisCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableAnalysisCint();

extern "C" void G__set_cpp_environmentAnalysisCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Analysis-TypeDef.hh");
  G__add_compiledheader("ana_base.hh");
  G__add_compiledheader("ana_processor.hh");
  G__add_compiledheader("beamgate_debugger.hh");
  G__add_compiledheader("led_pulse_analyzer.hh");
  G__add_compiledheader("led_pulse_selector.hh");
  G__add_compiledheader("pmtbaseline.hh");
  G__add_compiledheader("pmtbaseline_ana.hh");
  G__add_compiledheader("pulse_analyzer.hh");
  G__add_compiledheader("pulse_selector_base.hh");
  G__add_compiledheader("pulse_selector_simple.hh");
  G__add_compiledheader("pulse_viewer.hh");
  G__add_compiledheader("reco_wf.hh");
  G__add_compiledheader("waveform_sampler.hh");
  G__cpp_reset_tagtableAnalysisCint();
}
#include <new>
extern "C" int G__cpp_dllrevAnalysisCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ana_processor */
static int G__AnalysisCint_688_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ana_processor* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ana_processor[n];
     } else {
       p = new((void*) gvp) ana_processor[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ana_processor;
     } else {
       p = new((void*) gvp) ana_processor;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_processor*) G__getstructoffset())->add_input_file(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_processor*) G__getstructoffset())->set_output_file(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_processor*) G__getstructoffset())->set_ana_output_file(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ana_processor*) G__getstructoffset())->set_io_mode((storage_manager::MODE) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((ana_processor*) G__getstructoffset())->set_data_to_read((DATA_STRUCT::DATA_TYPE) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ana_processor*) G__getstructoffset())->set_data_to_read((DATA_STRUCT::DATA_TYPE) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((ana_processor*) G__getstructoffset())->set_data_to_write((DATA_STRUCT::DATA_TYPE) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((ana_processor*) G__getstructoffset())->set_data_to_write((DATA_STRUCT::DATA_TYPE) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const ana_processor*) G__getstructoffset())->get_ana_status((ana_base*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->run((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->run((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->run());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->process_event((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((ana_processor*) G__getstructoffset())->process_event());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((ana_processor*) G__getstructoffset())->add_process((ana_base*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((ana_processor*) G__getstructoffset())->get_process((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_688_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((ana_processor*) G__getstructoffset())->get_process_status());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_688_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ana_processor* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ana_processor(*(ana_processor*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ana_processor G__Tana_processor;
static int G__AnalysisCint_688_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ana_processor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ana_processor*) (soff+(sizeof(ana_processor)*i)))->~G__Tana_processor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ana_processor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ana_processor*) (soff))->~G__Tana_processor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_688_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ana_processor* dest = (ana_processor*) G__getstructoffset();
   *dest = *(ana_processor*) libp->para[0].ref;
   const ana_processor& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* reco_wf */
static int G__AnalysisCint_732_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reco_wf* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reco_wf[n];
     } else {
       p = new((void*) gvp) reco_wf[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new reco_wf;
     } else {
       p = new((void*) gvp) reco_wf;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_732_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((reco_wf*) G__getstructoffset())->get_ch_waveform((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_732_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const reco_wf*) G__getstructoffset())->get_ch_set());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_732_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((reco_wf*) G__getstructoffset())->set_frame_width((PMT::word_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_732_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reco_wf*) G__getstructoffset())->get_start_frame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_732_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const reco_wf*) G__getstructoffset())->get_start_slice());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_732_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((reco_wf*) G__getstructoffset())->get_histo());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_732_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   reco_wf* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new reco_wf(*(reco_wf*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef reco_wf G__Treco_wf;
static int G__AnalysisCint_732_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (reco_wf*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((reco_wf*) (soff+(sizeof(reco_wf)*i)))->~G__Treco_wf();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (reco_wf*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((reco_wf*) (soff))->~G__Treco_wf();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_732_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   reco_wf* dest = (reco_wf*) G__getstructoffset();
   *dest = *(reco_wf*) libp->para[0].ref;
   const reco_wf& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* set<unsigned int,less<unsigned int>,allocator<unsigned int> > */
static int G__AnalysisCint_735_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   set<unsigned int,less<unsigned int>,allocator<unsigned int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >[n];
     } else {
       p = new((void*) gvp) set<unsigned int,less<unsigned int>,allocator<unsigned int> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >;
     } else {
       p = new((void*) gvp) set<unsigned int,less<unsigned int>,allocator<unsigned int> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   set<unsigned int,less<unsigned int>,allocator<unsigned int> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >(*(set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) set<unsigned int,less<unsigned int>,allocator<unsigned int> >(*(set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<unsigned int,less<unsigned int>,allocator<unsigned int> >& obj = ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->operator=(*(set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator* pobj;
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator xobj = ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->begin();
         pobj = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator* pobj;
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator xobj = ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->end();
         pobj = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::reverse_iterator* pobj;
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::reverse_iterator xobj = ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->rbegin();
         pobj = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::reverse_iterator* pobj;
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::reverse_iterator xobj = ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->rend();
         pobj = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator,bool>* pobj;
         pair<set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator,bool> xobj = ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->insert(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new pair<set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator* pobj;
         set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator xobj = ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->insert(*((set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *(unsigned int*) G__UIntref(&libp->para[1]));
         pobj = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->erase(*((set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->erase(*((set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator*) G__int(libp->para[0])), *((set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->swap(*(set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator* pobj;
         const set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator xobj = ((const set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->find(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->count(*(unsigned int*) G__UIntref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator* pobj;
         const set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator xobj = ((const set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->lower_bound(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_735_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator* pobj;
         const set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator xobj = ((const set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) G__getstructoffset())->upper_bound(*(unsigned int*) G__UIntref(&libp->para[0]));
         pobj = new set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef set<unsigned int,less<unsigned int>,allocator<unsigned int> > G__TsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR;
static int G__AnalysisCint_735_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) (soff+(sizeof(set<unsigned int,less<unsigned int>,allocator<unsigned int> >)*i)))->~G__TsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((set<unsigned int,less<unsigned int>,allocator<unsigned int> >*) (soff))->~G__TsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* beamgate_debugger */
static int G__AnalysisCint_746_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   beamgate_debugger* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new beamgate_debugger[n];
     } else {
       p = new((void*) gvp) beamgate_debugger[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new beamgate_debugger;
     } else {
       p = new((void*) gvp) beamgate_debugger;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_746_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((beamgate_debugger*) G__getstructoffset())->set_max_adc((PMT::ch_adc_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_746_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((beamgate_debugger*) G__getstructoffset())->set_beam_window_size((PMT::word_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_746_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((beamgate_debugger*) G__getstructoffset())->set_pre_ped_nsample((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_746_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((beamgate_debugger*) G__getstructoffset())->set_post_ped_nsample((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_746_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   beamgate_debugger* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new beamgate_debugger(*(beamgate_debugger*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef beamgate_debugger G__Tbeamgate_debugger;
static int G__AnalysisCint_746_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (beamgate_debugger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((beamgate_debugger*) (soff+(sizeof(beamgate_debugger)*i)))->~G__Tbeamgate_debugger();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (beamgate_debugger*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((beamgate_debugger*) (soff))->~G__Tbeamgate_debugger();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_746_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   beamgate_debugger* dest = (beamgate_debugger*) G__getstructoffset();
   *dest = *(beamgate_debugger*) libp->para[0].ref;
   const beamgate_debugger& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pmtbaseline */
static int G__AnalysisCint_751_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pmtbaseline* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pmtbaseline[n];
     } else {
       p = new((void*) gvp) pmtbaseline[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pmtbaseline;
     } else {
       p = new((void*) gvp) pmtbaseline;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_751_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline*) G__getstructoffset())->set_nsample_ped((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_751_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline*) G__getstructoffset())->set_nsample_ped_tail((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_751_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline*) G__getstructoffset())->set_nsigma_threshold((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_751_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline*) G__getstructoffset())->set_adc_threshold((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_751_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline*) G__getstructoffset())->set_use_tail((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_751_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pmtbaseline* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pmtbaseline(*(pmtbaseline*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pmtbaseline G__Tpmtbaseline;
static int G__AnalysisCint_751_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pmtbaseline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pmtbaseline*) (soff+(sizeof(pmtbaseline)*i)))->~G__Tpmtbaseline();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pmtbaseline*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pmtbaseline*) (soff))->~G__Tpmtbaseline();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_751_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pmtbaseline* dest = (pmtbaseline*) G__getstructoffset();
   *dest = *(pmtbaseline*) libp->para[0].ref;
   const pmtbaseline& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pulse_viewer */
static int G__AnalysisCint_814_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pulse_viewer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pulse_viewer[n];
     } else {
       p = new((void*) gvp) pulse_viewer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pulse_viewer;
     } else {
       p = new((void*) gvp) pulse_viewer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((pulse_viewer*) G__getstructoffset())->next_pulse((PMT::ch_number_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((pulse_viewer*) G__getstructoffset())->previous_pulse((PMT::ch_number_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const pulse_viewer*) G__getstructoffset())->get_canvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const set<PMT::ch_number_t>* pobj;
         const set<PMT::ch_number_t> xobj = ((const pulse_viewer*) G__getstructoffset())->get_hit_channels();
         pobj = new set<PMT::ch_number_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((pulse_viewer*) G__getstructoffset())->next_channel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->display_cut_ranges();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((pulse_viewer*) G__getstructoffset())->get_npulse((PMT::ch_number_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_pulse_start_time((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_pulse_start_time_reco((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_pulse_end_time((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_pulse_amp((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_pulse_charge((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_ped_mean((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_ped_rms((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_event_id((PMT::word_t) G__int(libp->para[0]), (PMT::word_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_channel((PMT::ch_number_t) G__int(libp->para[0]), (PMT::ch_number_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_sum_charge((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_sum_peak((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_viewer*) G__getstructoffset())->set_range_npulse((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_pulse_start_time();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_pulse_start_time_reco();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_pulse_end_time();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_pulse_amp();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_pulse_charge();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_ped_mean();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_ped_rms();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<PMT::word_t,PMT::word_t>* pobj;
         const pair<PMT::word_t,PMT::word_t> xobj = ((const pulse_viewer*) G__getstructoffset())->range_event_id();
         pobj = new pair<PMT::word_t,PMT::word_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<PMT::word_t,PMT::word_t>* pobj;
         const pair<PMT::word_t,PMT::word_t> xobj = ((const pulse_viewer*) G__getstructoffset())->range_channel();
         pobj = new pair<PMT::word_t,PMT::word_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_sum_charge();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_viewer*) G__getstructoffset())->range_sum_peak();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_814_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<UInt_t,UInt_t>* pobj;
         const pair<UInt_t,UInt_t> xobj = ((const pulse_viewer*) G__getstructoffset())->range_npulse();
         pobj = new pair<UInt_t,UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_814_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pulse_viewer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pulse_viewer(*(pulse_viewer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pulse_viewer G__Tpulse_viewer;
static int G__AnalysisCint_814_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pulse_viewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pulse_viewer*) (soff+(sizeof(pulse_viewer)*i)))->~G__Tpulse_viewer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pulse_viewer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pulse_viewer*) (soff))->~G__Tpulse_viewer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pmtbaseline_ana */
static int G__AnalysisCint_859_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pmtbaseline_ana* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pmtbaseline_ana[n];
     } else {
       p = new((void*) gvp) pmtbaseline_ana[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pmtbaseline_ana;
     } else {
       p = new((void*) gvp) pmtbaseline_ana;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_pulse_start_time((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_pulse_start_time_reco((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_pulse_end_time((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_pulse_amp((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_pulse_charge((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_ped_mean((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_ped_rms((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_event_id((PMT::word_t) G__int(libp->para[0]), (PMT::word_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_channel((PMT::ch_number_t) G__int(libp->para[0]), (PMT::ch_number_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_sum_charge((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_sum_peak((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pmtbaseline_ana*) G__getstructoffset())->set_range_npulse((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_pulse_start_time();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_pulse_start_time_reco();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_pulse_end_time();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_pulse_amp();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_pulse_charge();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_ped_mean();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_ped_rms();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<PMT::word_t,PMT::word_t>* pobj;
         const pair<PMT::word_t,PMT::word_t> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_event_id();
         pobj = new pair<PMT::word_t,PMT::word_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<PMT::word_t,PMT::word_t>* pobj;
         const pair<PMT::word_t,PMT::word_t> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_channel();
         pobj = new pair<PMT::word_t,PMT::word_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_sum_charge();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_sum_peak();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_859_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<UInt_t,UInt_t>* pobj;
         const pair<UInt_t,UInt_t> xobj = ((const pmtbaseline_ana*) G__getstructoffset())->range_npulse();
         pobj = new pair<UInt_t,UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_859_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pmtbaseline_ana* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pmtbaseline_ana(*(pmtbaseline_ana*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pmtbaseline_ana G__Tpmtbaseline_ana;
static int G__AnalysisCint_859_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pmtbaseline_ana*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pmtbaseline_ana*) (soff+(sizeof(pmtbaseline_ana)*i)))->~G__Tpmtbaseline_ana();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pmtbaseline_ana*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pmtbaseline_ana*) (soff))->~G__Tpmtbaseline_ana();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pulse_analyzer */
static int G__AnalysisCint_867_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pulse_analyzer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pulse_analyzer[n];
     } else {
       p = new((void*) gvp) pulse_analyzer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pulse_analyzer;
     } else {
       p = new((void*) gvp) pulse_analyzer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_867_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_analyzer*) G__getstructoffset())->set_pulse_type((DATA_STRUCT::DATA_TYPE) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_867_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pulse_analyzer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pulse_analyzer(*(pulse_analyzer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pulse_analyzer G__Tpulse_analyzer;
static int G__AnalysisCint_867_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pulse_analyzer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pulse_analyzer*) (soff+(sizeof(pulse_analyzer)*i)))->~G__Tpulse_analyzer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pulse_analyzer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pulse_analyzer*) (soff))->~G__Tpulse_analyzer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_867_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pulse_analyzer* dest = (pulse_analyzer*) G__getstructoffset();
   *dest = *(pulse_analyzer*) libp->para[0].ref;
   const pulse_analyzer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pulse_selector_base */
static int G__AnalysisCint_868_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((pulse_selector_base*) G__getstructoffset())->select_pulse((pulse_info*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_868_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_base*) G__getstructoffset())->set_pulse_type((DATA_STRUCT::DATA_TYPE) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_868_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const pulse_selector_base*) G__getstructoffset())->pulse_type());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pulse_selector_base G__Tpulse_selector_base;
static int G__AnalysisCint_868_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pulse_selector_base*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pulse_selector_base*) (soff+(sizeof(pulse_selector_base)*i)))->~G__Tpulse_selector_base();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pulse_selector_base*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pulse_selector_base*) (soff))->~G__Tpulse_selector_base();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_868_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pulse_selector_base* dest = (pulse_selector_base*) G__getstructoffset();
   *dest = *(pulse_selector_base*) libp->para[0].ref;
   const pulse_selector_base& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pulse_selector_simple */
static int G__AnalysisCint_869_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pulse_selector_simple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pulse_selector_simple[n];
     } else {
       p = new((void*) gvp) pulse_selector_simple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pulse_selector_simple;
     } else {
       p = new((void*) gvp) pulse_selector_simple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->reset_cuts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_pulse_start_time((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_pulse_start_time_reco((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_pulse_end_time((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_pulse_amp((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_pulse_charge((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_ped_mean((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_ped_rms((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_frame_id((PMT::word_t) G__int(libp->para[0]), (PMT::word_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_timeslice((PMT::word_t) G__int(libp->para[0]), (PMT::word_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_channel((PMT::ch_number_t) G__int(libp->para[0]), (PMT::ch_number_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_sum_charge((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_sum_peak((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((pulse_selector_simple*) G__getstructoffset())->set_range_npulse((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_pulse_start_time();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_pulse_start_time_reco();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_pulse_end_time();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_pulse_amp();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_pulse_charge();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_ped_mean();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_ped_rms();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<PMT::word_t,PMT::word_t>* pobj;
         const pair<PMT::word_t,PMT::word_t> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_frame_id();
         pobj = new pair<PMT::word_t,PMT::word_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<PMT::word_t,PMT::word_t>* pobj;
         const pair<PMT::word_t,PMT::word_t> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_timeslice();
         pobj = new pair<PMT::word_t,PMT::word_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<PMT::word_t,PMT::word_t>* pobj;
         const pair<PMT::word_t,PMT::word_t> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_channel();
         pobj = new pair<PMT::word_t,PMT::word_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_sum_charge();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_869_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const pair<double,double>* pobj;
         const pair<double,double> xobj = ((const pulse_selector_simple*) G__getstructoffset())->range_sum_peak();
         pobj = new pair<double,double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_869_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pulse_selector_simple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pulse_selector_simple(*(pulse_selector_simple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pulse_selector_simple G__Tpulse_selector_simple;
static int G__AnalysisCint_869_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pulse_selector_simple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pulse_selector_simple*) (soff+(sizeof(pulse_selector_simple)*i)))->~G__Tpulse_selector_simple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pulse_selector_simple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pulse_selector_simple*) (soff))->~G__Tpulse_selector_simple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* led_pulse_selector */
static int G__AnalysisCint_870_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   led_pulse_selector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new led_pulse_selector[n];
     } else {
       p = new((void*) gvp) led_pulse_selector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new led_pulse_selector;
     } else {
       p = new((void*) gvp) led_pulse_selector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_870_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_selector*) G__getstructoffset())->clear_event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_870_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_selector*) G__getstructoffset())->set_ref_channel((PMT::ch_number_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_870_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_selector*) G__getstructoffset())->set_frame_size((PMT::word_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_870_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_selector*) G__getstructoffset())->set_time_cut((PMT::word_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_870_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   led_pulse_selector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new led_pulse_selector(*(led_pulse_selector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef led_pulse_selector G__Tled_pulse_selector;
static int G__AnalysisCint_870_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (led_pulse_selector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((led_pulse_selector*) (soff+(sizeof(led_pulse_selector)*i)))->~G__Tled_pulse_selector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (led_pulse_selector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((led_pulse_selector*) (soff))->~G__Tled_pulse_selector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* led_pulse_analyzer */
static int G__AnalysisCint_871_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   led_pulse_analyzer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new led_pulse_analyzer[n];
     } else {
       p = new((void*) gvp) led_pulse_analyzer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new led_pulse_analyzer;
     } else {
       p = new((void*) gvp) led_pulse_analyzer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_871_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_analyzer*) G__getstructoffset())->clear_event();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_871_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_analyzer*) G__getstructoffset())->set_pulse_type((DATA_STRUCT::DATA_TYPE) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_871_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_analyzer*) G__getstructoffset())->set_ref_channel((PMT::ch_number_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_871_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_analyzer*) G__getstructoffset())->set_frame_size((PMT::word_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_871_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((led_pulse_analyzer*) G__getstructoffset())->set_time_cut((PMT::word_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_871_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   led_pulse_analyzer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new led_pulse_analyzer(*(led_pulse_analyzer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef led_pulse_analyzer G__Tled_pulse_analyzer;
static int G__AnalysisCint_871_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (led_pulse_analyzer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((led_pulse_analyzer*) (soff+(sizeof(led_pulse_analyzer)*i)))->~G__Tled_pulse_analyzer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (led_pulse_analyzer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((led_pulse_analyzer*) (soff))->~G__Tled_pulse_analyzer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* waveform_sampler */
static int G__AnalysisCint_872_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   waveform_sampler* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new waveform_sampler[n];
     } else {
       p = new((void*) gvp) waveform_sampler[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new waveform_sampler;
     } else {
       p = new((void*) gvp) waveform_sampler;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_872_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveform_sampler*) G__getstructoffset())->set_selection((pulse_selector_base*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_872_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveform_sampler*) G__getstructoffset())->set_waveform_length((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__AnalysisCint_872_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((waveform_sampler*) G__getstructoffset())->get_waveform((PMT::ch_number_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__AnalysisCint_872_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   waveform_sampler* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new waveform_sampler(*(waveform_sampler*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef waveform_sampler G__Twaveform_sampler;
static int G__AnalysisCint_872_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (waveform_sampler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((waveform_sampler*) (soff+(sizeof(waveform_sampler)*i)))->~G__Twaveform_sampler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (waveform_sampler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((waveform_sampler*) (soff))->~G__Twaveform_sampler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__AnalysisCint_872_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   waveform_sampler* dest = (waveform_sampler*) G__getstructoffset();
   *dest = *(waveform_sampler*) libp->para[0].ref;
   const waveform_sampler& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ana_processor */

/* reco_wf */

/* set<unsigned int,less<unsigned int>,allocator<unsigned int> > */

/* beamgate_debugger */

/* pmtbaseline */

/* pulse_viewer */

/* pmtbaseline_ana */

/* pulse_analyzer */

/* pulse_selector_base */

/* pulse_selector_simple */

/* led_pulse_selector */

/* led_pulse_analyzer */

/* waveform_sampler */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncAnalysisCint {
 public:
  G__Sizep2memfuncAnalysisCint(): p(&G__Sizep2memfuncAnalysisCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncAnalysisCint::*p)();
};

size_t G__get_sizep2memfuncAnalysisCint()
{
  G__Sizep2memfuncAnalysisCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceAnalysisCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor))) {
     ana_processor *G__Lderived;
     G__Lderived=(ana_processor*)0x1000;
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf))) {
     reco_wf *G__Lderived;
     G__Lderived=(reco_wf*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger))) {
     beamgate_debugger *G__Lderived;
     G__Lderived=(beamgate_debugger*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline))) {
     pmtbaseline *G__Lderived;
     G__Lderived=(pmtbaseline*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer))) {
     pulse_viewer *G__Lderived;
     G__Lderived=(pulse_viewer*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana))) {
     pmtbaseline_ana *G__Lderived;
     G__Lderived=(pmtbaseline_ana*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer))) {
     pulse_analyzer *G__Lderived;
     G__Lderived=(pulse_analyzer*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base))) {
     pulse_selector_base *G__Lderived;
     G__Lderived=(pulse_selector_base*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple))) {
     pulse_selector_simple *G__Lderived;
     G__Lderived=(pulse_selector_simple*)0x1000;
     {
       pulse_selector_base *G__Lpbase=(pulse_selector_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple),G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector))) {
     led_pulse_selector *G__Lderived;
     G__Lderived=(led_pulse_selector*)0x1000;
     {
       pulse_selector_simple *G__Lpbase=(pulse_selector_simple*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector),G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       pulse_selector_base *G__Lpbase=(pulse_selector_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector),G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer))) {
     led_pulse_analyzer *G__Lderived;
     G__Lderived=(led_pulse_analyzer*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler))) {
     waveform_sampler *G__Lderived;
     G__Lderived=(waveform_sampler*)0x1000;
     {
       ana_base *G__Lpbase=(ana_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler),G__get_linked_tagnum(&G__AnalysisCintLN_ana_base),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       decoder_base *G__Lpbase=(decoder_base*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler),G__get_linked_tagnum(&G__AnalysisCintLN_decoder_base),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableAnalysisCint() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PMT::ch_adc_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pmt_waveform>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<tpc_waveform>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pulse_info>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpulse_infocOallocatorlEpulse_infogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpulse_infocOallocatorlEpulse_infogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpulse_infocOallocatorlEpulse_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpulse_infocOallocatorlEpulse_infogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpulse_infocOallocatorlEpulse_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,double>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,double>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,bool>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,bool,less<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<double> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<double> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> >,less<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<int> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<int> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<int,allocator<int> >,less<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<std::string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<string,allocator<string> >,less<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<bool> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<bool> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<bool,allocator<bool> >,less<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<user_info>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEuser_infocOallocatorlEuser_infogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEuser_infocOallocatorlEuser_infogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEuser_infocOallocatorlEuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEuser_infocOallocatorlEuser_infogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEuser_infocOallocatorlEuser_infogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ana_base*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ana_base*,bool>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<ana_base*,bool,less<ana_base*> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<UInt_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",104,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",104,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__AnalysisCintLN_lesslEunsignedsPintgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_compare",117,G__get_linked_tagnum(&G__AnalysisCintLN_lesslEunsignedsPintgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__AnalysisCintLN_allocatorlEunsignedsPintgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",72,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",72,-1,256,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",104,-1,1,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",104,-1,257,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<unsigned int>",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<unsigned int,less<unsigned int> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<UInt_t,PMT::ch_waveform_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,vector<unsigned short,allocator<unsigned short> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<PMT::ch_number_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<unsigned short>",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<unsigned short,less<unsigned short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<PMT::word_t,PMT::word_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,UInt_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::ch_number_t,std::pair<short,short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOpairlEshortcOshortgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOpairlEshortcOshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,pair<short,short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOpairlEshortcOshortgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOpairlEshortcOshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,pair<short,short>,less<unsigned short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOpairlEshortcOshortgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOpairlEshortcOshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PMT::word_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::ch_number_t,std::vector<PMT::word_t> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,vector<unsigned int,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,vector<unsigned int,allocator<unsigned int> >,less<unsigned short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::ch_number_t,std::vector<double> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,vector<double,allocator<double> >,less<unsigned short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::word_t,std::vector<PMT::ch_adc_t> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::word_t,std::map<PMT::word_t,std::vector<PMT::ch_adc_t> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > >,less<unsigned int> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::ch_number_t,std::map<PMT::word_t,std::map<PMT::word_t,std::vector<PMT::ch_adc_t> > > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOall),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > >,less<unsigned int>,allocator<pair<const unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > > > > > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOall),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > >,less<unsigned int>,allocator<pair<const unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > > > > >,less<unsigned short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOall),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<PMT::ch_number_t,PMT::ch_number_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPshortcOunsignedsPshortgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::ch_number_t,TH1D*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,TH1D*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,TH1D*,less<unsigned short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<PMT::word_t>",117,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::word_t,std::set<PMT::word_t> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> >,less<unsigned int> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::ch_number_t,std::map<PMT::word_t,std::set<PMT::word_t> > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,map<unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> >,less<unsigned int>,allocator<pair<const unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> > > > > >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,map<unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> >,less<unsigned int>,allocator<pair<const unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> > > > >,less<unsigned short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<PMT::ch_number_t,TH2D*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH2DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,TH2D*>",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH2DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<unsigned short,TH2D*,less<unsigned short> >",117,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH2DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH2DmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ana_processor */
static void G__setup_memvarana_processor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor));
   { ana_processor *p; p=(ana_processor*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-2,1,G__FastAllocString(2048).Format("INIT=%lldLL",(long long)ana_processor::INIT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-2,1,G__FastAllocString(2048).Format("READY=%lldLL",(long long)ana_processor::READY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-2,1,G__FastAllocString(2048).Format("PROCESSING=%lldLL",(long long)ana_processor::PROCESSING).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-2,1,G__FastAllocString(2048).Format("FINISHED=%lldLL",(long long)ana_processor::FINISHED).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR),G__defined_typename("vector<ana_base*>"),-1,4,"_analyzers=",0,"/< A vector of analysis modules");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR),G__defined_typename("map<ana_base*,bool>"),-1,4,"_ana_status=",0,"/< A map of analysis module status");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG),-1,-1,4,"_process=",0,"/< Processing status flag");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_nevents=",0,"/< Number of events being processed");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_index=",0,"/< Index of currently processing event");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_string),-1,-1,4,"_ofile_name=",0,"/< Output file name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TFile),-1,-1,4,"_fout=",0,"/< Output file pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_storage_manager),-1,-1,4,"_storage=",0,"/< Storage manager pointer");
   }
   G__tag_memvar_reset();
}


   /* reco_wf */
static void G__setup_memvarreco_wf(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf));
   { reco_wf *p; p=(reco_wf*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR),G__defined_typename("map<UInt_t,PMT::ch_waveform_t>"),-1,4,"_wf_map=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("set<UInt_t>"),-1,4,"_channels=",0,"/< A set of channel numbers ");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_frame_width=",0,"/< The readout frame width");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_event_id=",0,"/< Event ID number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_ref_slice=",0,"/< First time slice number in the event");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_ref_frame=",0,"/< First frame number in the event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"_wf_histo=",0,"/< Histogram of reco-ed waveforms");
   }
   G__tag_memvar_reset();
}


   /* set<unsigned int,less<unsigned int>,allocator<unsigned int> > */
static void G__setup_memvarsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   { set<unsigned int,less<unsigned int>,allocator<unsigned int> > *p; p=(set<unsigned int,less<unsigned int>,allocator<unsigned int> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* beamgate_debugger */
static void G__setup_memvarbeamgate_debugger(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger));
   { beamgate_debugger *p; p=(beamgate_debugger*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"_hSampleSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"_hPrePedMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"_hPostPedMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"_hPrePedRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"_hPostPedRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"_hMaxADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"_hMaxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("ch_adc_t"),-1,4,"_adc_max=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("ch_number_t"),-1,4,"_ch_cnt=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_beam_window_width=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_pre_nsample=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_post_nsample=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"_pre_sample=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"_post_sample=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pmtbaseline */
static void G__setup_memvarpmtbaseline(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline));
   { pmtbaseline *p; p=(pmtbaseline*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"pedMean=",0,"/< pedestal mean vs. channels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"pedRMS=",0,"/< pedestal RMS vs. channels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH2D),-1,-1,4,"tailstudy=",0,"/< pedestal mean vs. channels where mean is taken from tail samples");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"tailMean=",0,"/< 1D histogram of pedestal mean taken from tail samples");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"tailRMS=",0,"/< 1D histogram of pedestal rms taken from tail samples");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"channels=",0,"/< 1D histogram of participating channels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"pedMeanAll=",0,"/< 1D histogram of pedetal mean (both from head & tail)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"pedRMSAll=",0,"/< 1D histogram of pedetal RMS (both from head & tail)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"tailMeanCutrms=",0,"/< 1D histogram of tail pedestal mean for RMS>0.5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"tailRMSCutrms=",0,"/< 1D histogram of tail pedestal rms for RMS>0.5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"pedMeanCutrms=",0,"/< 1D histogram of head pedestal mean for RMS>0.5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"pedRMSCutrms=",0,"/< 1D histogram of head pedestal rms for RMS>0.5");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"reco_time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,4,"reco_time_diff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TGraphErrors),-1,-1,4,"rdbadwaveforms=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TGraphErrors),-1,-1,4,"bgbadwaveforms=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_use_tail=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_study_tail=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_bgpoints=",0,"Beam gate points");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_rdpoints=",0,"Random tail points");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_ftailmean=",0,"Random ped mean");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_ftailrms=",0,"Random ped rms");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_fpedmean=",0,"Beamgate ped mean");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_fpedrms=",0,"Beamgate ped rms");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_nsigma=",0,"number of sigma offset from baseline to claim a pulse");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min_peak=",0,"absolute adc count threshold (baseline subtracted) to claim a pulse");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_max=",0,"maximum amplitude of a pulse");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"rd_waveforms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"rdticks=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"bg_waveforms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"bgticks=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pulse_viewer */
static void G__setup_memvarpulse_viewer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer));
   { pulse_viewer *p; p=(pulse_viewer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,2,"_event_id=",0,"/< event id holder");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_sum_charge=",0,"/< event-wise summed charge holder");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"_sum_peak=",0,"/< event-wise summed peak height holder");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"_npulse=",0,"/< event-wise number of reco-ed pulse holder");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("set<PMT::ch_number_t>"),-1,2,"_channels=",0,"/< set of channel numbers for reco-ed pulses");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgRcLcLiterator),-1,-1,2,"_ch_iter=",0,"/< internal iterator for _channels member");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOpairlEshortcOshortgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOpairlEshortcOshortgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::pair<short,short> >"),-1,2,"_pulse_count=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<PMT::word_t> >"),-1,2,"_pulse_frame_id=",0,"/< a set of frame id");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<PMT::word_t> >"),-1,2,"_pulse_sample_number=",0,"/< a set of sample numbers");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<double> >"),-1,2,"_pulse_tstart=",0,"/< a set of reco-ed pulse start time");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<double> >"),-1,2,"_pulse_tstart_reco=",0,"/< a set of reco-ed pulse reco-ed start time");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<double> >"),-1,2,"_pulse_tend=",0,"/< a set of reco-ed pulse end time");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<double> >"),-1,2,"_pulse_amp=",0,"/< a set of reco-ed pulse amplitude");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<double> >"),-1,2,"_pulse_charge=",0,"/< a set of reco-ed pulse charge");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<double> >"),-1,2,"_pulse_pedbase=",0,"/< a set of reco-ed pulse pedestal baseline mean");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::vector<double> >"),-1,2,"_pulse_pedrms=",0,"/< a set of reco-ed pulse pedestal baseline standard deviation");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOall),G__defined_typename("map<PMT::ch_number_t,std::map<PMT::word_t,std::map<PMT::word_t,std::vector<PMT::ch_adc_t> > > >"),-1,2,"_waveforms=",0,"/< waveform containers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TCanvas),-1,-1,2,"_cWF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TPad),-1,-1,2,"_pTitle=",0,"/< title pad");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TPad),-1,-1,2,"_pData=",0,"/< data (histogram, numbers) pad");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TPad),-1,-1,2,"_pNote=",0,"/< pulse parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TPad),-1,-1,2,"_pWF=",0,"/< waveform histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TText),-1,-1,2,"_fTitle=",0,"/< canvas title");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TPaveText),-1,-1,2,"_fNote=",0,"/< pulse parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TH1D),-1,-1,2,"_hWF=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TLine),-1,-1,2,"_lStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TLine),-1,-1,2,"_lEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TLine),-1,-1,2,"_lBase=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TLine),-1,-1,2,"_lRMSTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TLine),-1,-1,2,"_lRMSBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TLine),-1,-1,2,"_lTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tstart=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tstart_reco=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tend=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_amp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_pedbase=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_pedrms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_sum_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_sum_peak=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),G__defined_typename("pair<UInt_t,UInt_t>"),-1,2,"_cut_npulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),G__defined_typename("pair<PMT::word_t,PMT::word_t>"),-1,2,"_cut_event_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPshortcOunsignedsPshortgR),G__defined_typename("pair<PMT::ch_number_t,PMT::ch_number_t>"),-1,2,"_cut_channels=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pmtbaseline_ana */
static void G__setup_memvarpmtbaseline_ana(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana));
   { pmtbaseline_ana *p; p=(pmtbaseline_ana*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,TH1D*>"),-1,2,"_hArray_PedMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,TH1D*>"),-1,2,"_hArray_PedRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,TH1D*>"),-1,2,"_hArray_Charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,TH1D*>"),-1,2,"_hArray_Peak=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tstart=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tstart_reco=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tend=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_amp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_pedbase=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_pedrms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_sum_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_sum_peak=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),G__defined_typename("pair<UInt_t,UInt_t>"),-1,2,"_cut_npulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),G__defined_typename("pair<PMT::word_t,PMT::word_t>"),-1,2,"_cut_event_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPshortcOunsignedsPshortgR),G__defined_typename("pair<PMT::ch_number_t,PMT::ch_number_t>"),-1,2,"_cut_channels=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pulse_analyzer */
static void G__setup_memvarpulse_analyzer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer));
   { pulse_analyzer *p; p=(pulse_analyzer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_event_id=",0,"/< event id holder");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_ch_frame_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_ch_sample_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_disc_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_DATA_STRUCTcLcLDATA_TYPE),-1,-1,4,"_pulse_type=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TTree),-1,-1,4,"_ch_tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_nsample=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_peak=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_ts=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_tm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_te=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_ped_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_ped_rms=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pulse_selector_base */
static void G__setup_memvarpulse_selector_base(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base));
   { pulse_selector_base *p; p=(pulse_selector_base*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_DATA_STRUCTcLcLDATA_TYPE),-1,-1,2,"_pulse_type=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* pulse_selector_simple */
static void G__setup_memvarpulse_selector_simple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple));
   { pulse_selector_simple *p; p=(pulse_selector_simple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tstart=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tstart_reco=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_tend=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_amp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_pedbase=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_pedrms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_sum_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR),-1,-1,2,"_cut_sum_peak=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),G__defined_typename("pair<UInt_t,UInt_t>"),-1,2,"_cut_npulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),G__defined_typename("pair<PMT::word_t,PMT::word_t>"),-1,2,"_cut_frame_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR),G__defined_typename("pair<PMT::word_t,PMT::word_t>"),-1,2,"_cut_timeslice=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPshortcOunsignedsPshortgR),G__defined_typename("pair<PMT::ch_number_t,PMT::ch_number_t>"),-1,2,"_cut_channels=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* led_pulse_selector */
static void G__setup_memvarled_pulse_selector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector));
   { led_pulse_selector *p; p=(led_pulse_selector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("ch_number_t"),-1,4,"_ref_ch=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_frame_size=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_time_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),G__defined_typename("set<PMT::word_t>"),-1,4,"_ref_time=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* led_pulse_analyzer */
static void G__setup_memvarled_pulse_analyzer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer));
   { led_pulse_analyzer *p; p=(led_pulse_analyzer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_event_id=",0,"/< event id holder");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_ch_frame_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_ch_sample_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("word_t"),-1,4,"_disc_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_TTree),-1,-1,4,"_ch_tree=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_nsample=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_charge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_peak=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_ts=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_tm=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_wf_te=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_ped_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_ped_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector),-1,-1,4,"_selector=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* waveform_sampler */
static void G__setup_memvarwaveform_sampler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler));
   { waveform_sampler *p; p=(waveform_sampler*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,std::map<PMT::word_t,std::set<PMT::word_t> > >"),-1,2,"_sel_info=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base),-1,-1,2,"_selector=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__AnalysisCintLN_maplEunsignedsPshortcOTH2DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH2DmUgRsPgRsPgR),G__defined_typename("map<PMT::ch_number_t,TH2D*>"),-1,2,"_hWF_map=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"_wf_length=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarAnalysisCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncana_processor(void) {
   /* ana_processor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor));
   G__memfunc_setup("ana_processor",1391,G__AnalysisCint_688_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_verbosity",1426,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i 'MSG::Level' - 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add_input_file",1463,G__AnalysisCint_688_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_output_file",1627,G__AnalysisCint_688_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_ana_output_file",2026,G__AnalysisCint_688_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_io_mode",1159,G__AnalysisCint_688_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i 'storage_manager::MODE' - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_data_to_read",1666,G__AnalysisCint_688_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'DATA_STRUCT::DATA_TYPE' - 0 - type g - - 0 'true' read", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_data_to_write",1809,G__AnalysisCint_688_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'DATA_STRUCT::DATA_TYPE' - 0 - type g - - 0 'true' write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ana_status",1490,G__AnalysisCint_688_0_9, 103, -1, -1, 0, 1, 1, 1, 8, "U 'ana_base' - 0 - ptr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("run",341,G__AnalysisCint_688_0_10, 103, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 '0' start_index h - 'UInt_t' 0 '0' nevents", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("process_event",1408,G__AnalysisCint_688_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_process",1159,G__AnalysisCint_688_0_12, 107, -1, G__defined_typename("size_t"), 0, 1, 1, 1, 0, "U 'ana_base' - 0 - ana", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_process",1182,G__AnalysisCint_688_0_13, 85, G__get_linked_tagnum(&G__AnalysisCintLN_ana_base), -1, 0, 1, 1, 1, 0, "k - 'size_t' 0 - loc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_process_status",1953,G__AnalysisCint_688_0_14, 105, G__get_linked_tagnum(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ana_processor", 1391, G__AnalysisCint_688_0_18, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor), -1, 0, 1, 1, 1, 0, "u 'ana_processor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ana_processor", 1517, G__AnalysisCint_688_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_688_0_20, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_ana_processor), -1, 1, 1, 1, 1, 0, "u 'ana_processor' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncreco_wf(void) {
   /* reco_wf */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf));
   G__memfunc_setup("reco_wf",741,G__AnalysisCint_732_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("get_ch_waveform",1584,G__AnalysisCint_732_0_5, 85, G__get_linked_tagnum(&G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("PMT::ch_waveform_t"), 0, 1, 1, 1, 1, "h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ch_set",1045,G__AnalysisCint_732_0_6, 85, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("set<UInt_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_frame_width",1589,G__AnalysisCint_732_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'PMT::word_t' 0 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_start_frame",1591,G__AnalysisCint_732_0_8, 104, -1, G__defined_typename("PMT::word_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_start_slice",1596,G__AnalysisCint_732_0_9, 104, -1, G__defined_typename("PMT::word_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_histo",966,G__AnalysisCint_732_0_10, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH2D), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_event",1160,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("reco_wf", 741, G__AnalysisCint_732_0_13, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf), -1, 0, 1, 1, 1, 0, "u 'reco_wf' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~reco_wf", 867, G__AnalysisCint_732_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_732_0_15, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_reco_wf), -1, 1, 1, 1, 1, 0, "u 'reco_wf' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR(void) {
   /* set<unsigned int,less<unsigned int>,allocator<unsigned int> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR));
   G__memfunc_setup("set<unsigned int,less<unsigned int>,allocator<unsigned int> >",5890,G__AnalysisCint_735_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set<unsigned int,less<unsigned int>,allocator<unsigned int> >",5890,G__AnalysisCint_735_0_2, 105, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR), -1, 0, 1, 1, 1, 0, "u 'set<unsigned int,less<unsigned int>,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__AnalysisCint_735_0_3, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR), -1, 1, 1, 1, 1, 0, "u 'set<unsigned int,less<unsigned int>,allocator<unsigned int> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__AnalysisCint_735_0_4, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__AnalysisCint_735_0_5, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__AnalysisCint_735_0_6, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__AnalysisCint_735_0_7, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__AnalysisCint_735_0_8, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__AnalysisCint_735_0_9, 107, -1, G__defined_typename("set<unsigned int,less<unsigned int>,allocator<unsigned int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__AnalysisCint_735_0_10, 107, -1, G__defined_typename("set<unsigned int,less<unsigned int>,allocator<unsigned int> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AnalysisCint_735_0_11, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__AnalysisCint_735_0_12, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator' - 0 - position h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AnalysisCint_735_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__AnalysisCint_735_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator' - 0 - first u 'set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__AnalysisCint_735_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'set<unsigned int,less<unsigned int>,allocator<unsigned int> >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__AnalysisCint_735_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__AnalysisCint_735_0_17, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__AnalysisCint_735_0_18, 107, -1, G__defined_typename("set<unsigned int,less<unsigned int>,allocator<unsigned int> >::size_type"), 0, 1, 1, 1, 8, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__AnalysisCint_735_0_19, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__AnalysisCint_735_0_20, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 8, "h - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~set<unsigned int,less<unsigned int>,allocator<unsigned int> >", 6016, G__AnalysisCint_735_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncbeamgate_debugger(void) {
   /* beamgate_debugger */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger));
   G__memfunc_setup("beamgate_debugger",1754,G__AnalysisCint_746_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_max_adc",1144,G__AnalysisCint_746_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'PMT::ch_adc_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_beam_window_size",2129,G__AnalysisCint_746_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'PMT::word_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_pre_ped_nsample",2009,G__AnalysisCint_746_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_post_ped_nsample",2136,G__AnalysisCint_746_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("prepare_histo",1397,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ped_info",1251,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"d - - 1 - mean d - - 1 - rms "
"U 'vector<double,allocator<double> >' 'vector<double>' 10 - sample", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("beamgate_debugger", 1754, G__AnalysisCint_746_0_12, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger), -1, 0, 1, 1, 1, 0, "u 'beamgate_debugger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~beamgate_debugger", 1880, G__AnalysisCint_746_0_13, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_746_0_14, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_beamgate_debugger), -1, 1, 1, 1, 1, 0, "u 'beamgate_debugger' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpmtbaseline(void) {
   /* pmtbaseline */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline));
   G__memfunc_setup("pmtbaseline",1172,G__AnalysisCint_751_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_nsample_ped",1587,G__AnalysisCint_751_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_nsample_ped_tail",2108,G__AnalysisCint_751_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_nsigma_threshold",2134,G__AnalysisCint_751_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - thres", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_adc_threshold",1791,G__AnalysisCint_751_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - thres", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_use_tail",1281,G__AnalysisCint_751_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - use", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_event",1160,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mean",417,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rms",338,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - - h - 'UInt_t' 0 - - "
"d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tailmean",843,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tailrms",764,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 3, 1, 4, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<UShort_t>' 0 - - h - 'UInt_t' 0 - - "
"d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("time_reconstructor",1963,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"d - - 0 - - u 'vector<unsigned short,allocator<unsigned short> >::iterator' 'vector<unsigned short,allocator<unsigned short> >::const_iterator' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("histosetup",1112,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pmtbaseline", 1172, G__AnalysisCint_751_0_17, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline), -1, 0, 1, 1, 1, 0, "u 'pmtbaseline' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pmtbaseline", 1298, G__AnalysisCint_751_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_751_0_19, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline), -1, 1, 1, 1, 1, 0, "u 'pmtbaseline' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpulse_viewer(void) {
   /* pulse_viewer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer));
   G__memfunc_setup("pulse_viewer",1306,G__AnalysisCint_814_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("next_pulse",1095,G__AnalysisCint_814_0_5, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH1D), -1, 0, 1, 1, 1, 0, "r - 'PMT::ch_number_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("previous_pulse",1541,G__AnalysisCint_814_0_6, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH1D), -1, 0, 1, 1, 1, 0, "r - 'PMT::ch_number_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_canvas",1051,G__AnalysisCint_814_0_7, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TCanvas), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_hit_channels",1679,G__AnalysisCint_814_0_8, 117, G__get_linked_tagnum(&G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgR), G__defined_typename("set<PMT::ch_number_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("next_channel",1271,G__AnalysisCint_814_0_9, 114, -1, G__defined_typename("PMT::ch_number_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("display_cut_ranges",1920,G__AnalysisCint_814_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_npulse",1078,G__AnalysisCint_814_0_11, 115, -1, -1, 0, 1, 1, 1, 0, "r - 'PMT::ch_number_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_start_time",2779,G__AnalysisCint_814_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_start_time_reco",3299,G__AnalysisCint_814_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_end_time",2532,G__AnalysisCint_814_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_amp",2013,G__AnalysisCint_814_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_charge",2313,G__AnalysisCint_814_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_ped_mean",1872,G__AnalysisCint_814_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_ped_rms",1793,G__AnalysisCint_814_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_event_id",1893,G__AnalysisCint_814_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'PMT::word_t' 0 - v1 h - 'PMT::word_t' 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_channel",1776,G__AnalysisCint_814_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - 'PMT::ch_number_t' 0 - v1 r - 'PMT::ch_number_t' 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_sum_charge",2101,G__AnalysisCint_814_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_sum_peak",1900,G__AnalysisCint_814_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_npulse",1710,G__AnalysisCint_814_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_start_time",2352,G__AnalysisCint_814_0_24, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_start_time_reco",2872,G__AnalysisCint_814_0_25, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_end_time",2105,G__AnalysisCint_814_0_26, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_amp",1586,G__AnalysisCint_814_0_27, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_charge",1886,G__AnalysisCint_814_0_28, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_ped_mean",1445,G__AnalysisCint_814_0_29, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_ped_rms",1366,G__AnalysisCint_814_0_30, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_event_id",1466,G__AnalysisCint_814_0_31, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<PMT::word_t,PMT::word_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_channel",1349,G__AnalysisCint_814_0_32, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<PMT::word_t,PMT::word_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_sum_charge",1674,G__AnalysisCint_814_0_33, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_sum_peak",1473,G__AnalysisCint_814_0_34, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_npulse",1283,G__AnalysisCint_814_0_35, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<UInt_t,UInt_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_style",988,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset_cuts",1089,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_map",932,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_viewer",1272,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_waveform",1286,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH1D), -1, 0, 2, 1, 2, 0, 
"r - 'PMT::ch_number_t' 0 - ch k - 'size_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add_channel_entry",1778,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "r - 'PMT::ch_number_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pulse_viewer", 1306, G__AnalysisCint_814_0_42, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_pulse_viewer), -1, 0, 1, 1, 1, 0, "u 'pulse_viewer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pulse_viewer", 1432, G__AnalysisCint_814_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpmtbaseline_ana(void) {
   /* pmtbaseline_ana */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana));
   G__memfunc_setup("pmtbaseline_ana",1571,G__AnalysisCint_859_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_range_pulse_start_time",2779,G__AnalysisCint_859_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_start_time_reco",3299,G__AnalysisCint_859_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_end_time",2532,G__AnalysisCint_859_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_amp",2013,G__AnalysisCint_859_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_charge",2313,G__AnalysisCint_859_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_ped_mean",1872,G__AnalysisCint_859_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_ped_rms",1793,G__AnalysisCint_859_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_event_id",1893,G__AnalysisCint_859_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'PMT::word_t' 0 - v1 h - 'PMT::word_t' 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_channel",1776,G__AnalysisCint_859_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - 'PMT::ch_number_t' 0 - v1 r - 'PMT::ch_number_t' 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_sum_charge",2101,G__AnalysisCint_859_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_sum_peak",1900,G__AnalysisCint_859_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_npulse",1710,G__AnalysisCint_859_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_start_time",2352,G__AnalysisCint_859_0_17, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_start_time_reco",2872,G__AnalysisCint_859_0_18, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_end_time",2105,G__AnalysisCint_859_0_19, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_amp",1586,G__AnalysisCint_859_0_20, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_charge",1886,G__AnalysisCint_859_0_21, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_ped_mean",1445,G__AnalysisCint_859_0_22, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_ped_rms",1366,G__AnalysisCint_859_0_23, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_event_id",1466,G__AnalysisCint_859_0_24, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<PMT::word_t,PMT::word_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_channel",1349,G__AnalysisCint_859_0_25, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<PMT::word_t,PMT::word_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_sum_charge",1674,G__AnalysisCint_859_0_26, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_sum_peak",1473,G__AnalysisCint_859_0_27, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_npulse",1283,G__AnalysisCint_859_0_28, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<UInt_t,UInt_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset_cuts",1089,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pmtbaseline_ana", 1571, G__AnalysisCint_859_0_30, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_pmtbaseline_ana), -1, 0, 1, 1, 1, 0, "u 'pmtbaseline_ana' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pmtbaseline_ana", 1697, G__AnalysisCint_859_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpulse_analyzer(void) {
   /* pulse_analyzer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer));
   G__memfunc_setup("pulse_analyzer",1518,G__AnalysisCint_867_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_pulse_type",1525,G__AnalysisCint_867_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i 'DATA_STRUCT::DATA_TYPE' - 0 - type", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pulse_analyzer", 1518, G__AnalysisCint_867_0_6, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer), -1, 0, 1, 1, 1, 0, "u 'pulse_analyzer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pulse_analyzer", 1644, G__AnalysisCint_867_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_867_0_8, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_pulse_analyzer), -1, 1, 1, 1, 1, 0, "u 'pulse_analyzer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpulse_selector_base(void) {
   /* pulse_selector_base */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base));
   G__memfunc_setup("select_pulse",1288,G__AnalysisCint_868_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "U 'pulse_info' - 10 - data", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("set_pulse_type",1525,G__AnalysisCint_868_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i 'DATA_STRUCT::DATA_TYPE' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pulse_type",1098,G__AnalysisCint_868_0_4, 105, G__get_linked_tagnum(&G__AnalysisCintLN_DATA_STRUCTcLcLDATA_TYPE), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pulse_selector_base", 2145, G__AnalysisCint_868_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_868_0_6, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_base), -1, 1, 1, 1, 1, 0, "u 'pulse_selector_base' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpulse_selector_simple(void) {
   /* pulse_selector_simple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple));
   G__memfunc_setup("pulse_selector_simple",2258,G__AnalysisCint_869_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reset_cuts",1089,G__AnalysisCint_869_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select_pulse",1288,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'pulse_info' - 10 - data", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_range_pulse_start_time",2779,G__AnalysisCint_869_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_start_time_reco",3299,G__AnalysisCint_869_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_end_time",2532,G__AnalysisCint_869_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_amp",2013,G__AnalysisCint_869_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_pulse_charge",2313,G__AnalysisCint_869_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_ped_mean",1872,G__AnalysisCint_869_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_ped_rms",1793,G__AnalysisCint_869_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_frame_id",1870,G__AnalysisCint_869_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'PMT::word_t' 0 - v1 h - 'PMT::word_t' 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_timeslice",2006,G__AnalysisCint_869_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'PMT::word_t' 0 - v1 h - 'PMT::word_t' 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_channel",1776,G__AnalysisCint_869_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"r - 'PMT::ch_number_t' 0 - v1 r - 'PMT::ch_number_t' 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_sum_charge",2101,G__AnalysisCint_869_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_sum_peak",1900,G__AnalysisCint_869_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_range_npulse",1710,G__AnalysisCint_869_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - v1 d - - 0 - v2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_start_time",2352,G__AnalysisCint_869_0_20, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_start_time_reco",2872,G__AnalysisCint_869_0_21, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_end_time",2105,G__AnalysisCint_869_0_22, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_amp",1586,G__AnalysisCint_869_0_23, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_pulse_charge",1886,G__AnalysisCint_869_0_24, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_ped_mean",1445,G__AnalysisCint_869_0_25, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_ped_rms",1366,G__AnalysisCint_869_0_26, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_frame_id",1443,G__AnalysisCint_869_0_27, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<PMT::word_t,PMT::word_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_timeslice",1579,G__AnalysisCint_869_0_28, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<PMT::word_t,PMT::word_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_channel",1349,G__AnalysisCint_869_0_29, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR), G__defined_typename("pair<PMT::word_t,PMT::word_t>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_sum_charge",1674,G__AnalysisCint_869_0_30, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("range_sum_peak",1473,G__AnalysisCint_869_0_31, 117, G__get_linked_tagnum(&G__AnalysisCintLN_pairlEdoublecOdoublegR), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pulse_selector_simple", 2258, G__AnalysisCint_869_0_32, (int) ('i'), 
G__get_linked_tagnum(&G__AnalysisCintLN_pulse_selector_simple), -1, 0, 1, 1, 1, 0, "u 'pulse_selector_simple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pulse_selector_simple", 2384, G__AnalysisCint_869_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncled_pulse_selector(void) {
   /* led_pulse_selector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector));
   G__memfunc_setup("led_pulse_selector",1917,G__AnalysisCint_870_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear_event",1160,G__AnalysisCint_870_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_ref_channel",1568,G__AnalysisCint_870_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'PMT::ch_number_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_frame_size",1488,G__AnalysisCint_870_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'PMT::word_t' 0 - frame_size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_time_cut",1285,G__AnalysisCint_870_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'PMT::word_t' 0 - time_cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select_pulse",1288,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'pulse_info' - 10 - data", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("led_pulse_selector", 1917, G__AnalysisCint_870_0_10, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_selector), -1, 0, 1, 1, 1, 0, "u 'led_pulse_selector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~led_pulse_selector", 2043, G__AnalysisCint_870_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncled_pulse_analyzer(void) {
   /* led_pulse_analyzer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer));
   G__memfunc_setup("led_pulse_analyzer",1922,G__AnalysisCint_871_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear_event",1160,G__AnalysisCint_871_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_pulse_type",1525,G__AnalysisCint_871_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i 'DATA_STRUCT::DATA_TYPE' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_ref_channel",1568,G__AnalysisCint_871_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'PMT::ch_number_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_frame_size",1488,G__AnalysisCint_871_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'PMT::word_t' 0 - frame_size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_time_cut",1285,G__AnalysisCint_871_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'PMT::word_t' 0 - time_cut", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("led_pulse_analyzer", 1922, G__AnalysisCint_871_0_10, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_led_pulse_analyzer), -1, 0, 1, 1, 1, 0, "u 'led_pulse_analyzer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~led_pulse_analyzer", 2048, G__AnalysisCint_871_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncwaveform_sampler(void) {
   /* waveform_sampler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler));
   G__memfunc_setup("waveform_sampler",1722,G__AnalysisCint_872_0_1, 105, G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialize",1074,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyze",756,(G__InterfaceMethod) NULL,103, -1, -1, 0, 1, 1, 1, 0, "U 'storage_manager' - 0 - storage", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("set_selection",1393,G__AnalysisCint_872_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'pulse_selector_base' - 0 - algo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_waveform_length",2035,G__AnalysisCint_872_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - length", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_waveform",1286,G__AnalysisCint_872_0_7, 85, G__get_linked_tagnum(&G__AnalysisCintLN_TH2D), -1, 0, 1, 1, 1, 0, "r - 'PMT::ch_number_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear_event",1160,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sample_waveform",1608,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'pmt_waveform' - 10 - wf", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("waveform_sampler", 1722, G__AnalysisCint_872_0_10, (int) ('i'), G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler), -1, 0, 1, 1, 1, 0, "u 'waveform_sampler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~waveform_sampler", 1848, G__AnalysisCint_872_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__AnalysisCint_872_0_12, (int) ('u'), G__get_linked_tagnum(&G__AnalysisCintLN_waveform_sampler), -1, 1, 1, 1, 1, 0, "u 'waveform_sampler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncAnalysisCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalAnalysisCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcAnalysisCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator = { "vector<unsigned short,allocator<unsigned short> >::iterator" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_allocatorlEunsignedsPintgR = { "allocator<unsigned int>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_MSG = { "MSG" , 110 , -1 };
G__linked_taginfo G__AnalysisCintLN_MSGcLcLLevel = { "MSG::Level" , 101 , -1 };
G__linked_taginfo G__AnalysisCintLN_DATA_STRUCT = { "DATA_STRUCT" , 110 , -1 };
G__linked_taginfo G__AnalysisCintLN_DATA_STRUCTcLcLDATA_TYPE = { "DATA_STRUCT::DATA_TYPE" , 101 , -1 };
G__linked_taginfo G__AnalysisCintLN_decoder_base = { "decoder_base" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pmt_waveform = { "pmt_waveform" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgR = { "vector<pmt_waveform,allocator<pmt_waveform> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pmt_waveform,allocator<pmt_waveform> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgR = { "vector<tpc_waveform,allocator<tpc_waveform> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<tpc_waveform,allocator<tpc_waveform> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pulse_info = { "pulse_info" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEpulse_infocOallocatorlEpulse_infogRsPgR = { "vector<pulse_info,allocator<pulse_info> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEpulse_infocOallocatorlEpulse_infogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pulse_info,allocator<pulse_info> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR = { "map<string,double,less<string>,allocator<pair<const string,double> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pairlEdoublecOdoublegR = { "pair<double,double>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR = { "map<string,bool,less<string>,allocator<pair<const string,bool> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<string,vector<int,allocator<int> >,less<string>,allocator<pair<const string,vector<int,allocator<int> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR = { "map<string,vector<string,allocator<string> >,less<string>,allocator<pair<const string,vector<string,allocator<string> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR = { "map<string,vector<bool,allocator<bool> >,less<string>,allocator<pair<const string,vector<bool,allocator<bool> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEuser_infocOallocatorlEuser_infogRsPgR = { "vector<user_info,allocator<user_info> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEuser_infocOallocatorlEuser_infogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<user_info,allocator<user_info> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_storage_manager = { "storage_manager" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_storage_managercLcLMODE = { "storage_manager::MODE" , 101 , -1 };
G__linked_taginfo G__AnalysisCintLN_ana_base = { "ana_base" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_ana_processor = { "ana_processor" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG = { "ana_processor::PROCESS_FLAG" , 101 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR = { "vector<ana_base*,allocator<ana_base*> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ana_base*,allocator<ana_base*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR = { "map<ana_base*,bool,less<ana_base*>,allocator<pair<ana_base* const,bool> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reco_wf = { "reco_wf" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_lesslEunsignedsPintgR = { "less<unsigned int>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR = { "set<unsigned int,less<unsigned int>,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator = { "set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLreverse_iterator = { "set<unsigned int,less<unsigned int>,allocator<unsigned int> >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pairlEsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiteratorcOboolgR = { "pair<set<unsigned int,less<unsigned int>,allocator<unsigned int> >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR = { "map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_beamgate_debugger = { "beamgate_debugger" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pmtbaseline = { "pmtbaseline" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TLine = { "TLine" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TText = { "TText" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pulse_viewer = { "pulse_viewer" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgR = { "set<unsigned short,less<unsigned short>,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgRcLcLiterator = { "set<unsigned short,less<unsigned short>,allocator<unsigned short> >::iterator" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR = { "pair<unsigned int,unsigned int>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPshortcOpairlEshortcOshortgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOpairlEshortcOshortgRsPgRsPgRsPgR = { "map<unsigned short,pair<short,short>,less<unsigned short>,allocator<pair<const unsigned short,pair<short,short> > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR = { "map<unsigned short,vector<unsigned int,allocator<unsigned int> >,less<unsigned short>,allocator<pair<const unsigned short,vector<unsigned int,allocator<unsigned int> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<unsigned short,vector<double,allocator<double> >,less<unsigned short>,allocator<pair<const unsigned short,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > >,less<unsigned int>,allocator<pair<const unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOall = { "map<unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > >,less<unsigned int>,allocator<pair<const unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > > > > >,less<unsigned short>,allocator<pair<const unsigned short,map<unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > >,less<unsigned int>,allocator<pair<const unsigned int,map<unsigned int,vector<unsigned short,allocator<unsigned short> >,less<unsigned int>,allocator<pair<const unsigned int,vector<unsigned short,allocator<unsigned short> > > > > > > > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pairlEunsignedsPshortcOunsignedsPshortgR = { "pair<unsigned short,unsigned short>" , 115 , -1 };
G__linked_taginfo G__AnalysisCintLN_pmtbaseline_ana = { "pmtbaseline_ana" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR = { "map<unsigned short,TH1D*,less<unsigned short>,allocator<pair<const unsigned short,TH1D*> > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pulse_analyzer = { "pulse_analyzer" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pulse_selector_base = { "pulse_selector_base" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_pulse_selector_simple = { "pulse_selector_simple" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_led_pulse_selector = { "led_pulse_selector" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_led_pulse_analyzer = { "led_pulse_analyzer" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_waveform_sampler = { "waveform_sampler" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR = { "map<unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> >,less<unsigned int>,allocator<pair<const unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<unsigned short,map<unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> >,less<unsigned int>,allocator<pair<const unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> > > > >,less<unsigned short>,allocator<pair<const unsigned short,map<unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> >,less<unsigned int>,allocator<pair<const unsigned int,set<unsigned int,less<unsigned int>,allocator<unsigned int> > > > > > > >" , 99 , -1 };
G__linked_taginfo G__AnalysisCintLN_maplEunsignedsPshortcOTH2DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH2DmUgRsPgRsPgR = { "map<unsigned short,TH2D*,less<unsigned short>,allocator<pair<const unsigned short,TH2D*> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableAnalysisCint() {
  G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator.tagnum = -1 ;
  G__AnalysisCintLN_allocatorlEunsignedsPintgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_string.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__AnalysisCintLN_TFile.tagnum = -1 ;
  G__AnalysisCintLN_TCanvas.tagnum = -1 ;
  G__AnalysisCintLN_MSG.tagnum = -1 ;
  G__AnalysisCintLN_MSGcLcLLevel.tagnum = -1 ;
  G__AnalysisCintLN_DATA_STRUCT.tagnum = -1 ;
  G__AnalysisCintLN_DATA_STRUCTcLcLDATA_TYPE.tagnum = -1 ;
  G__AnalysisCintLN_decoder_base.tagnum = -1 ;
  G__AnalysisCintLN_pmt_waveform.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_pulse_info.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEpulse_infocOallocatorlEpulse_infogRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEpulse_infocOallocatorlEpulse_infogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_pairlEdoublecOdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEuser_infocOallocatorlEuser_infogRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEuser_infocOallocatorlEuser_infogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_TTree.tagnum = -1 ;
  G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_storage_manager.tagnum = -1 ;
  G__AnalysisCintLN_storage_managercLcLMODE.tagnum = -1 ;
  G__AnalysisCintLN_ana_base.tagnum = -1 ;
  G__AnalysisCintLN_ana_processor.tagnum = -1 ;
  G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TH1D.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__AnalysisCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__AnalysisCintLN_TH2D.tagnum = -1 ;
  G__AnalysisCintLN_reco_wf.tagnum = -1 ;
  G__AnalysisCintLN_lesslEunsignedsPintgR.tagnum = -1 ;
  G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator.tagnum = -1 ;
  G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__AnalysisCintLN_pairlEsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_beamgate_debugger.tagnum = -1 ;
  G__AnalysisCintLN_TGraphErrors.tagnum = -1 ;
  G__AnalysisCintLN_pmtbaseline.tagnum = -1 ;
  G__AnalysisCintLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__AnalysisCintLN_TPad.tagnum = -1 ;
  G__AnalysisCintLN_TLine.tagnum = -1 ;
  G__AnalysisCintLN_TText.tagnum = -1 ;
  G__AnalysisCintLN_TPaveText.tagnum = -1 ;
  G__AnalysisCintLN_pulse_viewer.tagnum = -1 ;
  G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgRcLcLiterator.tagnum = -1 ;
  G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPshortcOpairlEshortcOshortgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOpairlEshortcOshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOall.tagnum = -1 ;
  G__AnalysisCintLN_pairlEunsignedsPshortcOunsignedsPshortgR.tagnum = -1 ;
  G__AnalysisCintLN_pmtbaseline_ana.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_pulse_analyzer.tagnum = -1 ;
  G__AnalysisCintLN_pulse_selector_base.tagnum = -1 ;
  G__AnalysisCintLN_pulse_selector_simple.tagnum = -1 ;
  G__AnalysisCintLN_led_pulse_selector.tagnum = -1 ;
  G__AnalysisCintLN_led_pulse_analyzer.tagnum = -1 ;
  G__AnalysisCintLN_waveform_sampler.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__AnalysisCintLN_maplEunsignedsPshortcOTH2DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH2DmUgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableAnalysisCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_allocatorlEunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_string);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_MSG);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_MSGcLcLLevel);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_DATA_STRUCT);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_DATA_STRUCTcLcLDATA_TYPE);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_decoder_base);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pmt_waveform);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpmt_waveformcOallocatorlEpmt_waveformgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEtpc_waveformcOallocatorlEtpc_waveformgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pulse_info);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEpulse_infocOallocatorlEpulse_infogRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpulse_infocOallocatorlEpulse_infogRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOdoublecOlesslEstringgRcOallocatorlEpairlEconstsPstringcOdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pairlEdoublecOdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOboolcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOvectorlEintcOallocatorlEintgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOvectorlEstringcOallocatorlEstringgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEstringcOallocatorlEstringgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEuser_infocOallocatorlEuser_infogRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEuser_infocOallocatorlEuser_infogRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TTree);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_storage_manager);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_storage_managercLcLMODE);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_ana_base);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_ana_processor),sizeof(ana_processor),-1,263424,(char*)NULL,G__setup_memvarana_processor,G__setup_memfuncana_processor);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_ana_processorcLcLPROCESS_FLAG);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEana_basemUcOallocatorlEana_basemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEana_basemUcOallocatorlEana_basemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEana_basemUcOboolcOlesslEana_basemUgRcOallocatorlEpairlEana_basemUsPconstcOboolgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TH2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reco_wf),sizeof(reco_wf),-1,263424,(char*)NULL,G__setup_memvarreco_wf,G__setup_memfuncreco_wf);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_lesslEunsignedsPintgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR),sizeof(set<unsigned int,less<unsigned int>,allocator<unsigned int> >),-1,265984,(char*)NULL,G__setup_memvarsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR,G__setup_memfuncsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_setlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pairlEsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcLcLiteratorcOboolgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_beamgate_debugger),sizeof(beamgate_debugger),-1,263424,(char*)NULL,G__setup_memvarbeamgate_debugger,G__setup_memfuncbeamgate_debugger);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TGraphErrors);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pmtbaseline),sizeof(pmtbaseline),-1,263424,(char*)NULL,G__setup_memvarpmtbaseline,G__setup_memfuncpmtbaseline);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TPad);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TLine);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TText);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_TPaveText);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pulse_viewer),sizeof(pulse_viewer),-1,263424,(char*)NULL,G__setup_memvarpulse_viewer,G__setup_memfuncpulse_viewer);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_setlEunsignedsPshortcOlesslEunsignedsPshortgRcOallocatorlEunsignedsPshortgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pairlEunsignedsPintcOunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPshortcOpairlEshortcOshortgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOpairlEshortcOshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOmaplEunsignedsPintcOvectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgRcOlesslEunsignedsPintgRcOall);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pairlEunsignedsPshortcOunsignedsPshortgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pmtbaseline_ana),sizeof(pmtbaseline_ana),-1,263424,(char*)NULL,G__setup_memvarpmtbaseline_ana,G__setup_memfuncpmtbaseline_ana);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPshortcOTH1DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH1DmUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pulse_analyzer),sizeof(pulse_analyzer),-1,263424,(char*)NULL,G__setup_memvarpulse_analyzer,G__setup_memfuncpulse_analyzer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pulse_selector_base),sizeof(pulse_selector_base),-1,263428,(char*)NULL,G__setup_memvarpulse_selector_base,G__setup_memfuncpulse_selector_base);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_pulse_selector_simple),sizeof(pulse_selector_simple),-1,263424,(char*)NULL,G__setup_memvarpulse_selector_simple,G__setup_memfuncpulse_selector_simple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_led_pulse_selector),sizeof(led_pulse_selector),-1,263424,(char*)NULL,G__setup_memvarled_pulse_selector,G__setup_memfuncled_pulse_selector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_led_pulse_analyzer),sizeof(led_pulse_analyzer),-1,263424,(char*)NULL,G__setup_memvarled_pulse_analyzer,G__setup_memfuncled_pulse_analyzer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__AnalysisCintLN_waveform_sampler),sizeof(waveform_sampler),-1,263424,(char*)NULL,G__setup_memvarwaveform_sampler,G__setup_memfuncwaveform_sampler);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOmaplEunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRcOlesslEunsignedsPintgRcOallocatorlEpairlEconstsPunsignedsPintcOsetlEunsignedsPintcOlesslEunsignedsPintgRcOallocatorlEunsignedsPintgRsPgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__AnalysisCintLN_maplEunsignedsPshortcOTH2DmUcOlesslEunsignedsPshortgRcOallocatorlEpairlEconstsPunsignedsPshortcOTH2DmUgRsPgRsPgR);
}
extern "C" void G__cpp_setupAnalysisCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupAnalysisCint()");
  G__set_cpp_environmentAnalysisCint();
  G__cpp_setup_tagtableAnalysisCint();

  G__cpp_setup_inheritanceAnalysisCint();

  G__cpp_setup_typetableAnalysisCint();

  G__cpp_setup_memvarAnalysisCint();

  G__cpp_setup_memfuncAnalysisCint();
  G__cpp_setup_globalAnalysisCint();
  G__cpp_setup_funcAnalysisCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncAnalysisCint();
  return;
}
class G__cpp_setup_initAnalysisCint {
  public:
    G__cpp_setup_initAnalysisCint() { G__add_setup_func("AnalysisCint",(G__incsetup)(&G__cpp_setupAnalysisCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initAnalysisCint() { G__remove_setup_func("AnalysisCint"); }
};
G__cpp_setup_initAnalysisCint G__cpp_setup_initializerAnalysisCint;

